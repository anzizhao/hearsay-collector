<!DOCTYPE html><html xmlns:cc="http://creativecommons.org/ns#"><head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# medium-com: http://ogp.me/ns/fb/medium-com#"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Redux Step by Step: A Simple and Robust Workflow for Real Life Apps</title><link rel="canonical" href="https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092"><meta name="title" content="Redux Step by Step: A Simple and Robust Workflow for Real Life Apps"><meta name="referrer" content="always"><meta name="description" content="Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often…"><meta property="og:title" content="Redux Step by Step: A Simple and Robust Workflow for Real Life Apps"><meta property="og:url" content="https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092"><meta property="og:image" content="https://cdn-images-1.medium.com/max/1200/1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg"><meta property="fb:app_id" content="542599432471018"><meta property="og:description" content="Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often…"><meta name="twitter:description" content="Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often…"><meta name="twitter:image:src" content="https://cdn-images-1.medium.com/max/1200/1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg"><link rel="publisher" href="https://plus.google.com/103654360130207659246"><link rel="author" href="https://hackernoon.com/@talkol"><meta name="author" content="Tal Kol"><meta property="og:type" content="article"><meta name="twitter:card" content="summary_large_image"><meta property="article:publisher" content="https://www.facebook.com/hackernoon"><meta property="article:author" content="https://hackernoon.com/@talkol"><meta property="fb:smart_publish:robots" content="noauto"><meta name="robots" content="index, follow"><meta property="article:published_time" content="2016-10-16T15:49:28.178Z"><meta name="twitter:creator" content="@koltal"><meta name="twitter:site" content="@hackernoon"><meta property="og:site_name" content="Hacker Noon"><meta name="twitter:label1" value="Reading time"><meta name="twitter:data1" value="13 min read"><script type="application/ld+json">{"@context":"http://schema.org","@type":"NewsArticle","image":{"@type":"ImageObject","width":1920,"height":681,"url":"https://cdn-images-1.medium.com/max/1920/1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg"},"datePublished":"2016-10-16T15:49:28.178Z","dateModified":"2016-10-17T04:53:10.507Z","headline":"Redux Step by Step: A Simple and Robust Workflow for Real Life Apps","name":"Redux Step by Step: A Simple and Robust Workflow for Real Life Apps","keywords":["React","Redux","JavaScript","React Native","Reactjs"],"author":{"@type":"Person","name":"Tal Kol","url":"https://hackernoon.com/@talkol"},"creator":["Tal Kol"],"publisher":{"@type":"Organization","name":"Hacker Noon","url":"https://hackernoon.com","logo":{"@type":"ImageObject","width":500,"height":60,"url":"https://cdn-images-1.medium.com/max/500/1*iPOPOotvbMB_2ZRLb6nQDw.png"}},"mainEntityOfPage":"https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092"}</script><meta name="twitter:app:name:iphone" content="Medium"><meta name="twitter:app:id:iphone" content="828256236"><meta name="twitter:app:url:iphone" content="medium://p/1fdf7df46092"><meta property="al:ios:app_name" content="Medium"><meta property="al:ios:app_store_id" content="828256236"><meta property="al:android:package" content="com.medium.reader"><meta property="al:android:app_name" content="Medium"><meta property="al:ios:url" content="medium://p/1fdf7df46092"><meta property="al:android:url" content="medium://p/1fdf7df46092"><meta property="al:web:url" content="https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092"><link rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml" /><link rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/1fdf7df46092" /><meta name="theme-color" content="#000000"><link rel="stylesheet" href="https://cdn-static-1.medium.com/_/fp/css/main-base.llyEaiHQaFQXK5zE2yfiqw.css"><script>if (window.top !== window.self) window.top.location = window.self.location.href;var OB_startTime = new Date().getTime(); var OB_loadErrors = []; function _onerror(e) { OB_loadErrors.push(e) }; if (document.addEventListener) document.addEventListener("error", _onerror, true); else if (document.attachEvent) document.attachEvent("onerror", _onerror); function _asyncScript(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("script"); s.type = "text/javascript"; s.async = true; s.src = u; f.parentNode.insertBefore(s, f);}function _asyncStyles(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("link"); s.rel = "stylesheet"; s.href = u; f.parentNode.insertBefore(s, f); return s}var _gaq = _gaq || [];_gaq.push(["_setAccount", "UA-24232453-2"]); _gaq.push(["_setDomainName", window.location.hostname]); _gaq.push(["_setAllowLinker", true]); _gaq.push(["_trackPageview"]);_asyncScript(("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js");(new Image()).src = "/_/stat?event=pixel.load&origin=" + encodeURIComponent(location.origin);</script><script>(function () {var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight; var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; document.write("<style>section.section-image--fullBleed.is-backgrounded {padding-top: " + Math.round(1.1 * height) + "px;}section.section-image--fullScreen.is-backgrounded, section.section-image--coverFade.is-backgrounded {min-height: " + height + "px; padding-top: " + Math.round(0.5 * height) + "px;}.u-sizeViewHeight100 {height: " + height + "px !important;}.u-sizeViewHeightMin100 {min-height: " + height + "px !important;}section.section-image--coverFade, .section-image--fullScreen > .section-background, .section-image--coverFade > .section-background, .section-image--fullBleed .section-backgroundImage, .section-image--fullScreen .section-backgroundImage, .section-image--coverFade .section-backgroundImage {height: " + height + "px;}.section-image--content > .section-background, .section-image--content .section-backgroundImage, .section-aspectRatioViewportPlaceholder, .section-aspectRatioViewportCropPlaceholder {max-height: " + height + "px;}.section-image--fullBleed > .section-background {height: " + Math.round(1.1 * height) + "px;}.section-aspectRatioViewportBottomSpacer, .section-aspectRatioViewportBottomPlaceholder {max-height: " + Math.round(0.5 * height) + "px;}.zoomable:before {top: " + (-1 * height) + "px; left: " + (-1 * width) + "px; padding: " + height + "px " + width + "px;}</style>");})()</script><!--[if lt IE 9]><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js"></script><![endif]--><link rel="icon" href="https://cdn-images-1.medium.com/fit/c/128/128/1*76XiKOa05Yya6_CdYX8pVg.jpeg" class="js-favicon"><link rel="apple-touch-icon" sizes="152x152" href="https://cdn-images-1.medium.com/fit/c/152/152/1*76XiKOa05Yya6_CdYX8pVg.jpeg"><link rel="apple-touch-icon" sizes="120x120" href="https://cdn-images-1.medium.com/fit/c/120/120/1*76XiKOa05Yya6_CdYX8pVg.jpeg"><link rel="apple-touch-icon" sizes="76x76" href="https://cdn-images-1.medium.com/fit/c/76/76/1*76XiKOa05Yya6_CdYX8pVg.jpeg"><link rel="apple-touch-icon" href="https://cdn-images-1.medium.com/fit/c/60/60/1*76XiKOa05Yya6_CdYX8pVg.jpeg"><link rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon.KjTfUJo7yJH_fCoUzzH3cg.svg" color="#171717"></head><body itemscope class=" postShowScreen v-disableMobileWebImageGrids is-noJs"><script>document.body.className = document.body.className.replace(/(^|\s)is-noJs(\s|$)/, "$1is-js$2")</script><div class="site-main" id="container"><div class="butterBar butterBar--error"></div><div class="surface"><div id="prerendered" class="screenContent"><canvas class="canvas-renderer"></canvas><div class="container u-maxWidth740 u-xs-margin0 notesPositionContainer js-notesPositionContainer"></div><div class="metabar u-clearfix js-metabar u-textColorDarker u-tintBgColor u-tintSpectrum"><div class="metabar-inner u-marginAuto u-maxWidth1000 u-paddingLeft20 u-paddingRight20 js-metabarMiddle"><div class="metabar-block metabar-block--left u-floatLeft u-height65 u-xs-height56"><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56 u-marginRight18"><div class="u-alignBlock"><a class="js-logCollection" href="https://hackernoon.com?source=logo-lo_d55b5011565c---3a8144eabfe3"><img height="36" width="300" class="u-paddingTop5" src="https://cdn-images-1.medium.com/fit/c/300/36/1*iPOPOotvbMB_2ZRLb6nQDw.png?source=logoAvatar-lo_d55b5011565c---3a8144eabfe3" alt="Hacker Noon" /></a></div></div><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56 u-xs-hide"><div class="u-alignBlock"><div class="buttonSet u-lineHeightInherit u-marginLeft0"><div class="buttonSet-inner"><button class="button button--primary u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSizeSmallest u-uiTextMedium button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal js-relationshipButton is-smallPill" data-action="sign-in-prompt" data-sign-in-action="toggle-follow-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/hacker-daily" data-collection-id="3a8144eabfe3"><span class="button-label  js-buttonLabel">Follow</span></button></div><a class="button button--chromeless is-touchIconBlackPulse u-baseColor--buttonNormal button--withIcon button--withSvgIcon"  href="//twitter.com/hackernoon" title="Visit “Hacker Noon” on Twitter" aria-label="Visit “Hacker Noon” on Twitter" rel="me" target="_blank"><span class="button-defaultState"><span class="svgIcon svgIcon--twitterFilled svgIcon--25px"><svg class="svgIcon-use" width="25" height="25" viewBox="0 0 25 25" ><path d="M21.725 5.338c-.744.47-1.605.804-2.513 1.006a3.978 3.978 0 0 0-2.942-1.293c-2.22 0-4.02 1.81-4.02 4.02 0 .32.034.63.07.94-3.31-.18-6.27-1.78-8.255-4.23a4.544 4.544 0 0 0-.574 2.01c.04 1.43.74 2.66 1.8 3.38-.63-.01-1.25-.19-1.79-.5v.08c0 1.93 1.38 3.56 3.23 3.95-.34.07-.7.12-1.07.14-.25-.02-.5-.04-.72-.07.49 1.58 1.97 2.74 3.74 2.8a8.49 8.49 0 0 1-5.02 1.72c-.3-.03-.62-.04-.93-.07A11.447 11.447 0 0 0 8.88 21c7.386 0 11.43-6.13 11.414-11.414.015-.21.01-.38 0-.578a7.604 7.604 0 0 0 2.01-2.08 7.27 7.27 0 0 1-2.297.645 3.856 3.856 0 0 0 1.72-2.23"/></svg></span></span></a><a class="button button--chromeless is-touchIconBlackPulse u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-paddingLeft0"  href="//facebook.com/hackernoon" title="Visit “Hacker Noon” on Facebook" aria-label="Visit “Hacker Noon” on Facebook" rel="me" target="_blank"><span class="button-defaultState"><span class="svgIcon svgIcon--facebookFilled svgIcon--25px"><svg class="svgIcon-use" width="25" height="25" viewBox="0 0 25 25" ><path d="M21 12.646C21 7.65 16.97 3.6 12 3.6s-9 4.05-9 9.046a9.026 9.026 0 0 0 7.59 8.924v-6.376H8.395V12.64h2.193v-1.88c0-2.186 1.328-3.375 3.267-3.375.93 0 1.728.07 1.96.1V9.77H14.47c-1.055 0-1.26.503-1.26 1.242v1.63h2.517l-.33 2.554H13.21V21.6c4.398-.597 7.79-4.373 7.79-8.954"/></svg></span></span></a></div></div></div></div><div class="metabar-block u-floatRight u-xs-absolute u-xs-textAlignRight u-xs-right0 u-xs-marginRight20 u-height65 u-xs-height56"><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56"><div class="u-alignBlock"><div class="buttonSet u-lineHeightInherit"><a class="button button--primary button--dark button--chromeless u-accentColor--buttonDark is-inSiteNavBar u-lineHeight30 u-height32"  href="https://medium.com/m/signin?redirect=https%3A%2F%2Fhackernoon.com%2Fredux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092"data-action="sign-in-prompt"data-redirect="https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092" data-action-source="nav_signup">Sign in / Sign up</a></div></div></div></div></div><div class="metabar-inner u-marginAuto u-maxWidth1000 js-metabarBottom"><div class="metabar-block metabar-block--below u-height50 u-xs-height39 u-overflowHiddenY"><div class="u-textAlignLeft u-overflowX js-collectionNavItems u-sm-paddingLeft20 u-sm-paddingRight20 u-paddingBottom100"><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken js-homeNav u-baseColor--link"  href="https://hackernoon.com">Home</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken u-baseColor--link"  href="https://hackernoon.com/tagged/tech">Tech</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken u-baseColor--link"  href="https://hackernoon.com/tagged/productivity">Productivity</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken u-baseColor--link"  href="https://hackernoon.com/tagged/growth">Growth</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken u-baseColor--link"  href="https://hackernoon.com/tagged/founders">Founder Stories</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken u-baseColor--link"  href="https://hackernoon.com/tagged/letters">Letters</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="link link--darken u-accentColor--textDarken u-baseColor--link"  href="https://hackernoon.com/tagged/favorites">Favorites</a></span><span class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSizeSmaller u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0"><a class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-top1"  href="https://hackernoon.com/search" title="Search" aria-label="Search"><span class="button-defaultState"><span class="svgIcon svgIcon--search svgIcon--25px"><svg class="svgIcon-use" width="25" height="25"  viewBox="0 0 25 25"><path d="M20.067 18.933l-4.157-4.157a6 6 0 1 0-.884.884l4.157 4.157a.624.624 0 1 0 .884-.884zM6.5 11c0-2.62 2.13-4.75 4.75-4.75S16 8.38 16 11s-2.13 4.75-4.75 4.75S6.5 13.62 6.5 11z"/></svg></span></span></a></span></div></div></div></div><div class="metabar metabar--spacer js-metabarSpacer u-tintBgColor u-height115 u-xs-height95"></div><div class="postActionsBar js-postActionsBar"><div class="postActionsBar-container container"><div class="postActionsBar-content row js-postActionsBarContent"><div class="postActions u-marginAuto u-height44 u-maxWidth1250 u-padding0 u-relative"><div class="u-absolute u-right0 u-marginRight20 js-readNextInteractions"><div class="u-floatLeft"><div class="u-floatRight buttonSet"><div class="buttonSet-inner"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_actions_bar"><span class="svgIcon svgIcon--twitter svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z"/></svg></span></button></div><div class="buttonSet-inner"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_actions_bar"><span class="svgIcon svgIcon--facebook svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4"/></svg></span></button></div></div></div><div class="col u-xs-hide u-height44 u-width255 u-padding0 u-marginLeft0 u-verticalAlignTop u-foreground u-block u-floatLeft js-readNextMetabarRight"></div></div><div class="container u-maxWidth740 u-height44 u-marginAuto js-postActions-actionButtons"><div class="u-floatLeft buttonSet buttonSet--withLabels"><div class="buttonSet-inner"><div class="js-actionRecommend" data-post-id="1fdf7df46092" data-is-icon-29px="true" data-has-recommend-list="true" data-source="post_actions_bar"><button class="button button--primary button--large button--chromeless is-touchIconFadeInPulse u-accentColor--buttonNormal button--withIcon button--withSvgIcon u-accentColor--iconLight js-actionRecommendButton"  title="Recommend to share this article with your followers and let the author know you liked it" aria-label="Recommend to share this article with your followers and let the author know you liked it"data-action="sign-in-prompt" data-sign-in-action="upvote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/1fdf7df46092" data-action-source="post_actions_bar"><span class="button-defaultState"><span class="svgIcon svgIcon--heart svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.215 23.716c-.348.288-.984.826-1.376 1.158a.526.526 0 0 1-.68 0c-.36-.307-.92-.78-1.22-1.03C9.22 20.734 3 15.527 3 10.734 3 7.02 5.916 4 9.5 4c1.948 0 3.77.898 5 2.434C15.73 4.898 17.552 4 19.5 4c3.584 0 6.5 3.02 6.5 6.734 0 4.9-6.125 9.96-9.785 12.982zM19.5 5.2c-1.774 0-3.423.923-4.41 2.468a.699.699 0 0 1-.59.323.706.706 0 0 1-.59-.32c-.988-1.54-2.637-2.47-4.41-2.47-2.922 0-5.3 2.49-5.3 5.54 0 4.23 6.19 9.41 9.517 12.19.217.18.566.48.783.66l.952-.79c3.496-2.88 9.348-7.72 9.348-12.05 0-3.05-2.378-5.53-5.3-5.53z"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--heartFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M19.5 4c-1.948 0-3.77.898-5 2.434C13.27 4.898 11.448 4 9.5 4 5.916 4 3 7.02 3 10.734c0 4.793 6.227 10 9.95 13.11.296.25.853.723 1.212 1.03.196.166.48.166.677 0 .39-.332 1.02-.87 1.37-1.158 3.66-3.022 9.79-8.08 9.79-12.982C26 7.02 23.08 4 19.5 4z" fill-rule="evenodd"/></svg></span></span></button><button class="button button--chromeless u-baseColor--buttonNormal"  data-action="show-recommends" data-action-value="1fdf7df46092">140</button></div></div><div class="buttonSet-inner"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  data-action="scroll-to-responses" data-action-source="post_actions_bar"><span class="svgIcon svgIcon--response svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.27 20.058c1.89-1.826 2.754-4.17 2.754-6.674C24.024 8.21 19.67 4 14.1 4 8.53 4 4 8.21 4 13.384c0 5.175 4.53 9.385 10.1 9.385 1.007 0 2-.14 2.95-.41.285.25.592.49.918.7 1.306.87 2.716 1.31 4.19 1.31.276-.01.494-.14.6-.36a.625.625 0 0 0-.052-.65c-.61-.84-1.042-1.71-1.282-2.58a5.417 5.417 0 0 1-.154-.75zm-3.85 1.324l-.083-.28-.388.12a9.72 9.72 0 0 1-2.85.424c-4.96 0-8.99-3.706-8.99-8.262 0-4.556 4.03-8.263 8.99-8.263 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32c0 .07 0 .19.02.37.03.29.1.6.19.92.19.7.49 1.4.89 2.08-.93-.14-1.83-.49-2.67-1.06-.34-.22-.88-.48-1.16-.74z"/></svg></span></button><button class="button button--chromeless u-baseColor--buttonNormal"  data-action="scroll-to-responses">1</button></div></div></div></div></div></div></div><div class="container u-maxWidth740"><div class="js-postShareWidget u-foreground u-sm-hide u-marginLeftNegative100 u-transition--fadeOut300 u-fixed"><ul><li class="u-uiTextSemibold u-textAlignCenter u-textColorNormal u-fontSizeSmallest u-textUppercase">Share</li><li class="u-textAlignCenter"><div class="js-actionRecommend" data-post-id="1fdf7df46092" data-is-icon-29px="true" data-is-vertical="true" data-has-recommend-list="true" data-source="post_share_widget"><button class="button button--primary button--large button--chromeless is-touchIconFadeInPulse u-accentColor--buttonNormal button--withIcon button--withSvgIcon u-accentColor--iconLight js-actionRecommendButton"  title="Recommend to share this article with your followers and let the author know you liked it" aria-label="Recommend to share this article with your followers and let the author know you liked it"data-action="sign-in-prompt" data-sign-in-action="upvote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/1fdf7df46092" data-action-source="post_share_widget"><span class="button-defaultState"><span class="svgIcon svgIcon--heart svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.215 23.716c-.348.288-.984.826-1.376 1.158a.526.526 0 0 1-.68 0c-.36-.307-.92-.78-1.22-1.03C9.22 20.734 3 15.527 3 10.734 3 7.02 5.916 4 9.5 4c1.948 0 3.77.898 5 2.434C15.73 4.898 17.552 4 19.5 4c3.584 0 6.5 3.02 6.5 6.734 0 4.9-6.125 9.96-9.785 12.982zM19.5 5.2c-1.774 0-3.423.923-4.41 2.468a.699.699 0 0 1-.59.323.706.706 0 0 1-.59-.32c-.988-1.54-2.637-2.47-4.41-2.47-2.922 0-5.3 2.49-5.3 5.54 0 4.23 6.19 9.41 9.517 12.19.217.18.566.48.783.66l.952-.79c3.496-2.88 9.348-7.72 9.348-12.05 0-3.05-2.378-5.53-5.3-5.53z"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--heartFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M19.5 4c-1.948 0-3.77.898-5 2.434C13.27 4.898 11.448 4 9.5 4 5.916 4 3 7.02 3 10.734c0 4.793 6.227 10 9.95 13.11.296.25.853.723 1.212 1.03.196.166.48.166.677 0 .39-.332 1.02-.87 1.37-1.158 3.66-3.022 9.79-8.08 9.79-12.982C26 7.02 23.08 4 19.5 4z" fill-rule="evenodd"/></svg></span></span></button><button class="button button--chromeless u-baseColor--buttonNormal  u-block u-marginAuto u-marginTopNegative5"  data-action="show-recommends" data-action-value="1fdf7df46092">140</button></div></li><li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_share_widget"><span class="svgIcon svgIcon--twitter svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z"/></svg></span></button></li><li class="u-textAlignCenter"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_share_widget"><span class="svgIcon svgIcon--facebook svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4"/></svg></span></button></li></ul></div></div><article class=" u-sizeViewHeightMin100 postArticle postArticle--full is-withAccentColors"  lang="en"><header class="container u-maxWidth740"><div class="postMetaHeader u-paddingBottom10 row"><div class="col u-size12of12 js-postMetaLockup"><div class="postMetaLockup postMetaLockup--authorWithBio u-flex js-postMetaLockup"><div class="u-flex0"><a class="link avatar u-baseColor--link"  href="https://hackernoon.com/@talkol?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-type="hover" data-user-id="83a4f96844d0" data-collection-slug="hacker-daily" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/60/60/1*RvlrG_Pdhzb4RmV6aeHnrg.png" class="avatar-image avatar-image--small" alt="Go to the profile of Tal Kol"></a></div><div class="u-flex1 u-paddingLeft15 u-overflowHidden"><a class="link link link--darken link--darker u-baseColor--link"  href="https://hackernoon.com/@talkol?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-type="hover" data-user-id="83a4f96844d0" data-collection-slug="hacker-daily" dir="auto">Tal Kol</a><span class="followState js-followState buttonSet-inner" data-user-id="83a4f96844d0"><button class="button u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSizeSmallest u-uiTextMedium u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-marginLeft10 u-marginTopNegative2 u-xs-hide" data-action="sign-in-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-action-source="post_header_lockup"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary u-paddingLeft10 u-paddingRight10 u-height19 u-lineHeight13 u-verticalAlignMiddle u-fontSizeSmallest u-uiTextMedium u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton u-marginLeft10 u-marginTopNegative2 u-xs-hide" data-action="sign-in-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/83a4f96844d0" data-action-source="post_header_lockup_follow"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span><div class="postMetaInline u-noWrapWithEllipsis u-xs-normalWrap u-xs-lineClamp2">Full-stack developer. Co-founded two technology companies, the latter acquired by Wix.com.</div><div class="postMetaInline js-testPostMetaInlineSupplemental"><time datetime="2016-10-16T15:49:28.178Z">2 days ago</time><span class="middotDivider u-fontSizeSmallest"></span><span class="readingTime" title="13 min read"></span></div></div></div></div></div></header><main role="main" class="postArticle-content js-postField js-notesSource js-trackedPost"  data-post-id="1fdf7df46092" data-source="post_page" data-collection-id="3a8144eabfe3" data-tracking-context="postPage"><section name="8f94" class="section section--body section--first"><div class="section-divider layoutSingleColumn"><hr class="section-divider"></div><div class="section-content"><div class="section-inner layoutSingleColumn"><h1 name="a0db" id="a0db" class="graf graf--h3 graf--leading graf--title">Redux Step by Step: A Simple and Robust Workflow for Real Life Apps</h1></div><div class="section-inner sectionLayout--fullWidth"><figure name="3e3f" id="3e3f" class="graf graf--figure graf--layoutFillWidth graf-after--h3"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.5%;"></div><img class="graf-image" data-image-id="1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg" data-width="4096" data-height="1454" draggable="false" src="https://cdn-images-1.medium.com/max/2000/1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg"></div><figcaption class="imageCaption">no trees, just rocks</figcaption></figure></div><div class="section-inner layoutSingleColumn"><p name="7fb1" id="7fb1" class="graf graf--p graf-after--figure graf--last"><em class="markup--em markup--p-em">Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often causes a sensory overload where you can’t see the forest for the trees. Presented below is a straightforward and opinionated workflow for implementing real life apps with Redux. It is shown by example with a step by step implementation walkthrough of an actual app. It attempts to apply the principles behind Redux in a practical way and detail the thought process behind every decision.</em></p></div></div></section><section name="c3c2" class="section section--body"><div class="section-divider layoutSingleColumn"><hr class="section-divider"></div><div class="section-content"><div class="section-inner layoutSingleColumn"><h4 name="e2c3" id="e2c3" class="graf graf--h4 graf--leading">An opinionated approach for idiomatic Redux</h4><p name="91b6" id="91b6" class="graf graf--p graf-after--h4"><a href="https://github.com/reactjs/redux" data-href="https://github.com/reactjs/redux" class="markup--anchor markup--p-anchor" target="_blank">Redux</a> has become more than just a library, it’s an entire <a href="https://github.com/xgrommx/awesome-redux" data-href="https://github.com/xgrommx/awesome-redux" class="markup--anchor markup--p-anchor" target="_blank">ecosystem</a>. One of the reasons behind its popularity is its ability to accommodate different writing styles and many different flavors. If I’m looking for asynchronous actions should I use <a href="https://github.com/gaearon/redux-thunk" data-href="https://github.com/gaearon/redux-thunk" class="markup--anchor markup--p-anchor" target="_blank">thunks</a>? or maybe <a href="https://github.com/acdlite/redux-promise" data-href="https://github.com/acdlite/redux-promise" class="markup--anchor markup--p-anchor" target="_blank">promises</a>? or <a href="https://github.com/yelouafi/redux-saga" data-href="https://github.com/yelouafi/redux-saga" class="markup--anchor markup--p-anchor" target="_blank">sagas</a>?</p><p name="a7b9" id="a7b9" class="graf graf--p graf-after--p">There isn’t one right answer to which flavor is “best”. And there isn’t one right way to use Redux. Having said that, too much choice is <a href="http://www.ted.com/talks/barry_schwartz_on_the_paradox_of_choice?language=en" data-href="http://www.ted.com/talks/barry_schwartz_on_the_paradox_of_choice?language=en" class="markup--anchor markup--p-anchor" target="_blank">overwhelming</a>. I want to present an <em class="markup--em markup--p-em">opinionated </em>flavor that I personally like. It’s robust, can deal with complicated real life scenarios — and most of all — it’s <em class="markup--em markup--p-em">simple</em>.</p><h4 name="fbf6" id="fbf6" class="graf graf--h4 graf-after--p">So let’s build an app!</h4><p name="2689" id="2689" class="graf graf--p graf-after--h4">We need a real life example to walk through. As long as we’re being opinionated, the most interesting place on the Internet is <a href="https://www.reddit.com/" data-href="https://www.reddit.com/" class="markup--anchor markup--p-anchor" target="_blank">Reddit</a>. Let’s make an app that shows the most interesting posts there.</p><p name="04e1" id="04e1" class="graf graf--p graf-after--p">On the first screen, we’ll ask the user for 3 topics they’re interested in. We’ll pull the list of topics from Reddit’s list of default front page <a href="https://www.reddit.com/subreddits/default" data-href="https://www.reddit.com/subreddits/default" class="markup--anchor markup--p-anchor" target="_blank">subreddits</a>.</p><p name="dba7" id="dba7" class="graf graf--p graf-after--p">After the user makes a choice, we’ll show the list of posts from each of these 3 topics in a filterable list — all topics or just one of the 3. When the user clicks on a post in the list, we’ll show its contents.</p><h4 name="8ae6" id="8ae6" class="graf graf--h4 graf-after--p">Setup</h4><p name="3cf2" id="3cf2" class="graf graf--p graf-after--h4">Since we use React for the web (we might add React Native in a future post), our starting point will be <a href="https://github.com/facebookincubator/create-react-app" data-href="https://github.com/facebookincubator/create-react-app" class="markup--anchor markup--p-anchor" target="_blank">Create React App</a>, the official starter kit. We’ll also npm install <a href="https://www.npmjs.com/package/redux" data-href="https://www.npmjs.com/package/redux" class="markup--anchor markup--p-anchor" target="_blank">redux</a>, <a href="https://www.npmjs.com/package/react-redux" data-href="https://www.npmjs.com/package/react-redux" class="markup--anchor markup--p-anchor" target="_blank">react-redux</a> and <a href="https://www.npmjs.com/package/redux-thunk" data-href="https://www.npmjs.com/package/redux-thunk" class="markup--anchor markup--p-anchor" target="_blank">redux-thunk</a>. The result should be something like <a href="https://github.com/wix/react-dataflow-example/tree/998decf6277717ffcee61dea30005c1fe917ae2a" data-href="https://github.com/wix/react-dataflow-example/tree/998decf6277717ffcee61dea30005c1fe917ae2a" class="markup--anchor markup--p-anchor" target="_blank">this</a>.</p><p name="5a9e" id="5a9e" class="graf graf--p graf-after--p">To get the boilerplate out of the way, let’s also quickly initialize the Redux store and hook up thunk middleware in <em class="markup--em markup--p-em">index.js</em>:</p><figure name="9f5e" id="9f5e" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/a54830bc88e789f6a1d171a68c54cecc?maxWidth=700" data-media-id="a54830bc88e789f6a1d171a68c54cecc" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><h4 name="3d85" id="3d85" class="graf graf--h4 graf-after--figure">The Flux circle of life in a Redux app</h4><p name="1779" id="1779" class="graf graf--p graf-after--h4">One of the main things often missing from Redux tutorials is the grand picture and where Redux fits in. Redux is an implementation of the <a href="https://facebook.github.io/flux/" data-href="https://facebook.github.io/flux/" class="markup--anchor markup--p-anchor" target="_blank">Flux</a> architecture — a pattern for passing data around in a React app.</p><p name="5adc" id="5adc" class="graf graf--p graf-after--p">Under classic Flux, app state is held within <em class="markup--em markup--p-em">stores</em>. Dispatched <em class="markup--em markup--p-em">actions</em> cause this state to change, afterwhich the <em class="markup--em markup--p-em">views</em> that listen to these state changes will re-render themselves accordingly:</p><figure name="ec20" id="ec20" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 471px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 67.4%;"></div><img class="graf-image" data-image-id="1*stmn8kxXJrX9hbk39hHQJA.png" data-width="1608" data-height="1083" data-action="zoom" data-action-value="1*stmn8kxXJrX9hbk39hHQJA.png" draggable="false" src="https://cdn-images-1.medium.com/max/800/1*stmn8kxXJrX9hbk39hHQJA.png"></div></figure><p name="23c1" id="23c1" class="graf graf--p graf-after--figure graf--last">Flux simplifies life by making data flow in a <em class="markup--em markup--p-em">single</em> direction. This reduces the <a href="http://whatis.techtarget.com/definition/spaghetti-code" data-href="http://whatis.techtarget.com/definition/spaghetti-code" class="markup--anchor markup--p-anchor" target="_blank">spaghetti effect</a> as the codebase grows and becomes more complex.</p></div></div></section><section name="f01f" class="section section--body"><div class="section-divider layoutSingleColumn"><hr class="section-divider"></div><div class="section-content"><div class="section-inner layoutSingleColumn"><p name="34af" id="34af" class="graf graf--p graf--leading">One of the difficulties with understanding Redux is the plethora of unintuitive terms like <em class="markup--em markup--p-em">reducers</em>, <em class="markup--em markup--p-em">selectors </em>and <em class="markup--em markup--p-em">thunks</em>. It’s easier to see where they all fit in by placing them on the Flux diagram. These are simply the technical names of the various Redux constructs that implement the different parts of the cycle:</p><figure name="cd2d" id="cd2d" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 569px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 81.3%;"></div><img class="graf-image" data-image-id="1*9kbmrgH8voxp_rx25LPqIw.png" data-width="1608" data-height="1308" data-action="zoom" data-action-value="1*9kbmrgH8voxp_rx25LPqIw.png" draggable="false" src="https://cdn-images-1.medium.com/max/800/1*9kbmrgH8voxp_rx25LPqIw.png"></div></figure><p name="e22e" id="e22e" class="graf graf--p graf-after--figure">As you’ve probably noticed, other terms from the Redux ecosystem like <em class="markup--em markup--p-em">middlewares</em> and <em class="markup--em markup--p-em">sagas</em>, are absent. This is intentional as they won’t play a significant role in our workflow.</p><h4 name="69e5" id="69e5" class="graf graf--h4 graf-after--p">Project directory structure</h4><p name="5eac" id="5eac" class="graf graf--p graf-after--h4">We will organize our code according to the following top-level directory structure under <code class="markup--code markup--p-code">/src</code>:</p><ul class="postList"><li name="7a5b" id="7a5b" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">/src/components<br></code>“Dumb” React components that have no knowledge of Redux</li><li name="792d" id="792d" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">/src/containers</code><br>“Smart” React components that are <em class="markup--em markup--li-em">connected</em> to our Redux store</li><li name="f57d" id="f57d" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">/src/services</code><br>Abstraction facades for external API (like backend servers)</li><li name="cbc0" id="cbc0" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">/src/store</code><br>All Redux-specific code goes here, including all <em class="markup--em markup--li-em">business-logic</em> of our app</li></ul><p name="ac6c" id="ac6c" class="graf graf--p graf-after--li">The <code class="markup--code markup--p-code">store</code> directory is organized by <em class="markup--em markup--p-em">domain</em>, each containing:</p><ul class="postList"><li name="4d05" id="4d05" class="graf graf--li graf-after--p"><code class="markup--code markup--li-code">/src/store/{domain}/reducer.js</code><br>Reducer as a default export with all selectors as named exports</li><li name="f065" id="f065" class="graf graf--li graf-after--li"><code class="markup--code markup--li-code">/src/store/{domain}/actions.js</code><br>All the domain action handlers (thunks and plain object creators)</li></ul><h4 name="dcfd" id="dcfd" class="graf graf--h4 graf-after--li">A state-first approach</h4><p name="0c91" id="0c91" class="graf graf--p graf-after--h4">Our app has two screens, we’re going to start with the first and let the user choose exactly 3 topics. We can begin implementing any point of the Flux cycle, but I’ve discovered it’s usually easiest for me to start with the <em class="markup--em markup--p-em">State</em>.</p><p name="b864" id="b864" class="graf graf--p graf-after--p">So what <em class="markup--em markup--p-em">app state</em> does our <em class="markup--em markup--p-em">topics</em> screen need?</p><p name="3912" id="3912" class="graf graf--p graf-after--p">We’ll need to hold the list of topics retrieved from the server. We’ll also need to hold the ID’s of the topics chosen by the user so far (max 3). It will be nice to hold them in the order selected, so in case we already have 3 and another is chosen, we can simply drop the oldest one.</p><p name="a5bc" id="a5bc" class="graf graf--p graf-after--p">How will we structure this app state? There’s a list of actionable tips in my previous post — “<a href="https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4" data-href="https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4" class="markup--anchor markup--p-anchor" target="_blank">Avoiding Accidental Complexity When Structuring Your App State</a>”. Following the tips, this would be an appropriate structure:</p><figure name="167c" id="167c" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/bcdc0eae20a760408eaf3d1a51d86ee3?maxWidth=700" data-media-id="bcdc0eae20a760408eaf3d1a51d86ee3" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="cd3e" id="cd3e" class="graf graf--p graf-after--figure">The topic URL will serve as a unique ID.</p><p name="fdb4" id="fdb4" class="graf graf--p graf-after--p">Where will we hold this state? In Redux, the <em class="markup--em markup--p-em">reducer</em> is the construct that holds state and updates it. We will organize our code by <em class="markup--em markup--p-em">domains</em>, so the natural place for this reducer will be: <code class="markup--code markup--p-code">/src/store/topics/reducer.js</code></p><p name="77ea" id="77ea" class="graf graf--p graf-after--p">There’s some boilerplate to create a reducer, you can see it <a href="https://github.com/wix/react-dataflow-example/blob/0ff3077d3de9a4b2c0f1174a3fa204fee05ed594/src/store/topics/reducer.js" data-href="https://github.com/wix/react-dataflow-example/blob/0ff3077d3de9a4b2c0f1174a3fa204fee05ed594/src/store/topics/reducer.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>. Notice that in order to enforce <em class="markup--em markup--p-em">immutability</em> of our state (as required by Redux), I’ve chosen to use an immutability library called <a href="https://github.com/rtfeldman/seamless-immutable" data-href="https://github.com/rtfeldman/seamless-immutable" class="markup--anchor markup--p-anchor" target="_blank">seamless-immutable</a>.</p><h4 name="959a" id="959a" class="graf graf--h4 graf-after--p">Our first scenario</h4><p name="7e81" id="7e81" class="graf graf--p graf-after--h4">After modeling state, I like to take a user scenario and implement it from start to finish. In our case let’s create our <em class="markup--em markup--p-em">topics</em> screen and display some topics as soon as it shows up. This component will be connected to our reducer, meaning it’s a “smart” component that’s aware of Redux. We’ll place it in <code class="markup--code markup--p-code">/src/containers/TopicsScreen.js</code></p><p name="e9cb" id="e9cb" class="graf graf--p graf-after--p">There’s some boilerplate to create a connected component, you can see it <a href="https://github.com/wix/react-dataflow-example/blob/4151b3e702a002916f1d1579a2e33e0cf1cb0ba3/src/containers/TopicsScreen.js" data-href="https://github.com/wix/react-dataflow-example/blob/4151b3e702a002916f1d1579a2e33e0cf1cb0ba3/src/containers/TopicsScreen.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>. Let’s also display it as the content of our <a href="https://github.com/wix/react-dataflow-example/blob/57d53f2901e46ab2d90f756fd8c5988a5521e8e8/src/App.js" data-href="https://github.com/wix/react-dataflow-example/blob/57d53f2901e46ab2d90f756fd8c5988a5521e8e8/src/App.js" class="markup--anchor markup--p-anchor" target="_blank">App component</a>. Now, when everything is set up, we can fetch some topics.</p><blockquote name="1f30" id="1f30" class="graf graf--blockquote graf-after--p"><strong class="markup--strong markup--blockquote-strong"><em class="markup--em markup--blockquote-em">Rule:</em></strong><em class="markup--em markup--blockquote-em"> </em><strong class="markup--strong markup--blockquote-strong"><em class="markup--em markup--blockquote-em">Smart components are not allowed to have any logic except dispatching actions.</em></strong></blockquote><p name="7973" id="7973" class="graf graf--p graf-after--blockquote">The scenario starts on the view’s <code class="markup--code markup--p-code">componentDidMount</code>. Since can’t run logic directly on the view, we will dispatch an action that will fetch the topics. This action is asynchronous of course, so it will be a <a href="https://github.com/gaearon/redux-thunk" data-href="https://github.com/gaearon/redux-thunk" class="markup--anchor markup--p-anchor" target="_blank">thunk</a>:</p><figure name="f5d0" id="f5d0" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/a9bad7d50551d176773b33f9f7baa9cf?maxWidth=700" data-media-id="a9bad7d50551d176773b33f9f7baa9cf" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="466e" id="466e" class="graf graf--p graf-after--figure">In order to abstract the Reddit server API, we’ll create a new <em class="markup--em markup--p-em">service</em> that does the actual network fetch. Its methods will be asynchronous so we can <code class="markup--code markup--p-code">await</code> for the response. In general, I love the <a href="https://jakearchibald.com/2014/es7-async-functions/" data-href="https://jakearchibald.com/2014/es7-async-functions/" class="markup--anchor markup--p-anchor" target="_blank">async await API</a> so much that my code hasn’t seen a direct use of <code class="markup--code markup--p-code">promises</code> in a long time.</p><p name="08b0" id="08b0" class="graf graf--p graf-after--p">The <em class="markup--em markup--p-em">service</em> returns an <code class="markup--code markup--p-code">array</code>, but our state structure stores the topics in a <code class="markup--code markup--p-code">map</code>. The action body is a good place to do the conversion. In order to actually store the data in the state, we must invoke our reducer by dispatching a standard plain object action — <code class="markup--code markup--p-code">TOPICS_FETCHED</code>.</p><p name="2cc9" id="2cc9" class="graf graf--p graf-after--p">The full source for this stage is available <a href="https://github.com/wix/react-dataflow-example/tree/a74d3607578c6ef65da738ab2f92b80789258b2b/src" data-href="https://github.com/wix/react-dataflow-example/tree/a74d3607578c6ef65da738ab2f92b80789258b2b/src" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><h4 name="0ca0" id="0ca0" class="graf graf--h4 graf-after--p">A few words about services</h4><p name="6e58" id="6e58" class="graf graf--p graf-after--h4">Services are used to abstract external API — in many cases server API like the one <a href="https://www.reddit.com/dev/api/" data-href="https://www.reddit.com/dev/api/" class="markup--anchor markup--p-anchor" target="_blank">provided</a> by Reddit. The benefit of this abstraction layer is that API’s change and we want to decouple our code as much as possible from them. If in the future Reddit decides to rename endpoints or change field names, we can hopefully contain the impact on our app to the service alone.</p><blockquote name="6b3a" id="6b3a" class="graf graf--blockquote graf-after--p"><strong class="markup--strong markup--blockquote-strong"><em class="markup--em markup--blockquote-em">Rule: Services must be completely stateless.</em></strong></blockquote><p name="625f" id="625f" class="graf graf--p graf-after--blockquote">This is a tricky rule in our methodology. Imagine what would happen if our Reddit API required login. We might be tempted to hold this login state in the <em class="markup--em markup--p-em">service</em> by instantiating it with the login details.</p><p name="a22b" id="a22b" class="graf graf--p graf-after--p">This isn’t allowed in our methodology because all app state must be contained in the <em class="markup--em markup--p-em">store</em>. Holding state in a <em class="markup--em markup--p-em">service</em> would be a state leak. The acceptable approach in this case would be to provide every service function with login information as argument and hold the login state in one of our <em class="markup--em markup--p-em">reducers</em>.</p><p name="6640" id="6640" class="graf graf--p graf-after--p">Implementing the service is fairly straightforward, you can see it <a href="https://github.com/wix/react-dataflow-example/blob/f0e4a6bc4ccdec0b757e3cca7a76b6812f66f49b/src/services/reddit.js" data-href="https://github.com/wix/react-dataflow-example/blob/f0e4a6bc4ccdec0b757e3cca7a76b6812f66f49b/src/services/reddit.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><h4 name="d8dd" id="d8dd" class="graf graf--h4 graf-after--p">Completing the scenario — reducer and view</h4><p name="011b" id="011b" class="graf graf--p graf-after--h4">The plain object action <code class="markup--code markup--p-code">TOPICS_FETCHED</code> arrives at our reducer and contains the freshly fetched <code class="markup--code markup--p-code">topicsByUrl</code> as parameter. Our reducer doesn’t need to do much except save this data on the state:</p><figure name="048a" id="048a" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/f6807a1bf035914b1ca7826f04e510bb?maxWidth=700" data-media-id="f6807a1bf035914b1ca7826f04e510bb" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="04e6" id="04e6" class="graf graf--p graf-after--figure">Notice the usage of <a href="https://github.com/rtfeldman/seamless-immutable#merge" data-href="https://github.com/rtfeldman/seamless-immutable#merge" class="markup--anchor markup--p-anchor" target="_blank">seamless-immutable</a> to make this immutable change explicit and straightforward. Immutability libraries are of course optional, I prefer their syntactic sugar to <a href="http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html" data-href="http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html" class="markup--anchor markup--p-anchor" target="_blank">object spread tricks</a>.</p><p name="c0a2" id="c0a2" class="graf graf--p graf-after--p">After the state updates, our view needs to re-render. This means the view needs to listen on the part of the state it cares about. This is done with <a href="https://github.com/reactjs/react-redux" data-href="https://github.com/reactjs/react-redux" class="markup--anchor markup--p-anchor" target="_blank">mapStateToProps</a>:</p><figure name="7573" id="7573" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/ad1f8a720aaece84484d100ff9beffbd?maxWidth=700" data-media-id="ad1f8a720aaece84484d100ff9beffbd" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="8030" id="8030" class="graf graf--p graf-after--figure">I decided that our view will render the list of topics using a separate <code class="markup--code markup--p-code">ListView</code> component that takes a <code class="markup--code markup--p-code">rowsById</code> map and a <code class="markup--code markup--p-code">rowsIdArray</code> (inspired by <a href="https://facebook.github.io/react-native/docs/listview.html" data-href="https://facebook.github.io/react-native/docs/listview.html" class="markup--anchor markup--p-anchor" target="_blank">React Native</a>). I’m using <code class="markup--code markup--p-code">mapStateToProps</code> to prepare these two props in <code class="markup--code markup--p-code">TopicsScreen</code> (they will later be passed on directly to the <code class="markup--code markup--p-code">ListView</code>). The two props can be derived from our state. Notice something interesting, I don’t access the state directly..</p><blockquote name="0873" id="0873" class="graf graf--blockquote graf-after--p"><strong class="markup--strong markup--blockquote-strong"><em class="markup--em markup--blockquote-em">Rule: Smart components should always access state through selectors.</em></strong></blockquote><p name="0e0e" id="0e0e" class="graf graf--p graf-after--blockquote"><em class="markup--em markup--p-em">Selectors</em> are one of the most important constructs in Redux that people tend to overlook. A selector is a pure function that takes the global state as argument and returns some transformation over it. Selectors are tightly coupled to <em class="markup--em markup--p-em">reducers</em> and are located inside <code class="markup--code markup--p-code">reducer.js</code>. They allow us to perform a few calculations on data before it’s being consumed by the view. In our methodology, we take this idea even further. Every time anyone needs to access part of the state (like in <code class="markup--code markup--p-code">mapStatetoProps</code>), they need to go through a selector.</p><p name="59cf" id="59cf" class="graf graf--p graf-after--p">Why? The idea is to encapsulate the internal structure of the app state and hide it from views. Imagine that we decide later on to change the internal state structure. We wouldn’t want to go over all the views in our app and refactor them. Passing through a selector will allow us to confine the refactoring to the <em class="markup--em markup--p-em">reducer</em> only.</p><p name="dddc" id="dddc" class="graf graf--p graf-after--p">This is what does our <code class="markup--code markup--p-code">topics/reducer.js</code> look like:</p><figure name="f71a" id="f71a" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/9a854de24ab296c1058ee3b4911c30cd?maxWidth=700" data-media-id="9a854de24ab296c1058ee3b4911c30cd" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="ee1a" id="ee1a" class="graf graf--p graf-after--figure">The entire current state of our app, including <code class="markup--code markup--p-code">ListView</code>, can be seen <a href="https://github.com/wix/react-dataflow-example/tree/6b115770ac82d6f78a9f209630d0e0165f359316/src" data-href="https://github.com/wix/react-dataflow-example/tree/6b115770ac82d6f78a9f209630d0e0165f359316/src" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><h4 name="ab05" id="ab05" class="graf graf--h4 graf-after--p">A few words about “dumb” components</h4><p name="8990" id="8990" class="graf graf--p graf-after--h4"><code class="markup--code markup--p-code">ListView</code> is a good example of a “dumb” component. It is not connected to the store nor aware of Redux at all. Unlike the “smart” connected components that are located in <code class="markup--code markup--p-code">/src/containers</code>, these components are located in <code class="markup--code markup--p-code">/src/components</code></p><p name="72b1" id="72b1" class="graf graf--p graf--startsWithDoubleQuote graf-after--p">“Dumb” components receive data from their parents through props and may hold local component state. Assume you’re implementing a <code class="markup--code markup--p-code">TextInput</code> component from scratch. The blinking caret position is an excellent example for local component state that should not find its way into your global app state.</p><p name="5413" id="5413" class="graf graf--p graf-after--p">So when do we need to move from a “smart” component to a “dumb” one?</p><blockquote name="85fb" id="85fb" class="graf graf--blockquote graf-after--p"><strong class="markup--strong markup--blockquote-strong"><em class="markup--em markup--blockquote-em">Rule: Minimize view logic in smart components by extracting it into dumb components.</em></strong></blockquote><p name="2b1b" id="2b1b" class="graf graf--p graf-after--blockquote">If you look at the implementation of <a href="https://github.com/wix/react-dataflow-example/blob/6b115770ac82d6f78a9f209630d0e0165f359316/src/components/ListView.js" data-href="https://github.com/wix/react-dataflow-example/blob/6b115770ac82d6f78a9f209630d0e0165f359316/src/components/ListView.js" class="markup--anchor markup--p-anchor" target="_blank">ListView</a>, you will see it contains view logic like iterating over rows. We want to avoid having this logic in our smart <a href="https://github.com/wix/react-dataflow-example/blob/6b115770ac82d6f78a9f209630d0e0165f359316/src/containers/TopicsScreen.js" data-href="https://github.com/wix/react-dataflow-example/blob/6b115770ac82d6f78a9f209630d0e0165f359316/src/containers/TopicsScreen.js" class="markup--anchor markup--p-anchor" target="_blank">TopicsScreen</a> component. This keeps our smart components as wirings only. Another benefit is that the <code class="markup--code markup--p-code">ListView</code> logic is now reusable.</p><h4 name="3d59" id="3d59" class="graf graf--h4 graf-after--p">Next scenario — multiple topic selection</h4><p name="6dc9" id="6dc9" class="graf graf--p graf-after--h4">We’ve completed our first scenario. Let’s move on to the next one — having the user select exactly 3 topics from the list.</p><p name="8da6" id="8da6" class="graf graf--p graf-after--p">Our scenario starts with the user clicking on one of the topics. This event is handled by <code class="markup--code markup--p-code">TopicsScreen</code> but since this smart component cannot contain any business logic, we’ll dispatch a new action — <code class="markup--code markup--p-code">selectTopic</code>. This action will also be a <em class="markup--em markup--p-em">thunk</em>, placed in <code class="markup--code markup--p-code">topics/actions.js</code>. As you can see, almost every action we export (to be dispatched by views) is a <em class="markup--em markup--p-em">thunk</em>. We usually only dispatch plain object actions from within a thunk in order to update the reducer state.</p><figure name="2cf3" id="2cf3" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/9f83b526299916d71dc3392f35c47319?maxWidth=700" data-media-id="9f83b526299916d71dc3392f35c47319" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="e425" id="e425" class="graf graf--p graf-after--figure">An interesting aspect about this thunk is that it needs to access the state. Notice how we keep the rule that every state access goes through a selector even here (although some may claim it’s going a bit too far).</p><p name="813c" id="813c" class="graf graf--p graf-after--p">We’ll have to update the reducer to handle the <code class="markup--code markup--p-code">TOPICS_SELECTED</code> action and store the new selected topics. There’s an interesting question whether <code class="markup--code markup--p-code">selectTopic</code> needs to be a <em class="markup--em markup--p-em">thunk</em> at all. Alternatively, we could make <code class="markup--code markup--p-code">selectTopic</code> a plain object action and move this business logic to the reducer itself. This is a valid strategy. Personally I prefer to keep the business logic in thunks.</p><p name="13d9" id="13d9" class="graf graf--p graf-after--p">Once the state updates, we need to propagate the topic selection back to our view. This means adding the selected topics in <code class="markup--code markup--p-code">mapStateToProps</code>. Since the view needs to query whether every <code class="markup--code markup--p-code">rowId</code> is selected or not, it is more convenient to pass this data to the view as a map. Since the data has to go through a <em class="markup--em markup--p-em">selector</em> anyways, this will be a great place to do the transformation.</p><p name="c1f6" id="c1f6" class="graf graf--p graf-after--p">After implementing the above, and refactoring the background color change due to row selection into a new dumb component — <code class="markup--code markup--p-code">ListRow</code> — our app looks like <a href="https://github.com/wix/react-dataflow-example/tree/a279a45055370ef769e5f799cf44a2b034131ab3/src" data-href="https://github.com/wix/react-dataflow-example/tree/a279a45055370ef769e5f799cf44a2b034131ab3/src" class="markup--anchor markup--p-anchor" target="_blank">this</a>.</p><h4 name="ab9e" id="ab9e" class="graf graf--h4 graf-after--p">A few words about business logic</h4><p name="3dea" id="3dea" class="graf graf--p graf-after--h4">One of the goals of a good methodology is achieving proper separation between views and business logic. Where was our business logic implemented so far?</p><p name="6593" id="6593" class="graf graf--p graf-after--p">All business logic was implemented under Redux in the <code class="markup--code markup--p-code">/src/store</code> directory. Most of it was inside <em class="markup--em markup--p-em">thunks</em> in <code class="markup--code markup--p-code">actions.js</code> and some it was inside <em class="markup--em markup--p-em">selectors</em> in <code class="markup--code markup--p-code">reducer.js</code>. This is actually an official rule:</p><blockquote name="bf3c" id="bf3c" class="graf graf--blockquote graf-after--p"><strong class="markup--strong markup--blockquote-strong"><em class="markup--em markup--blockquote-em">Rule: Place all business logic inside action handlers (thunks), selectors and reducers.</em></strong></blockquote><h4 name="b643" id="b643" class="graf graf--h4 graf-after--blockquote">Navigating to the next screen — the posts list</h4><p name="7a94" id="7a94" class="graf graf--p graf-after--h4">When we have more than one screen we need a way to navigate. This is usually achieved using a navigation component like <a href="https://github.com/ReactTraining/react-router" data-href="https://github.com/ReactTraining/react-router" class="markup--anchor markup--p-anchor" target="_blank">react-router</a>. I want to deliberately avoid using a router in order to keep our example simple. Opinionated external dependencies like routers tend to draw attention away from the conceptual discussion of methodology.</p><p name="e917" id="e917" class="graf graf--p graf-after--p">Instead, let’s add a state variable , <code class="markup--code markup--p-code">selectionFinalized</code>, telling us whether the user completed topic selection or not. Once the user selects 3 topics, we will display a button that once clicked — will finalize selection and move to the next screen. Clicking the button will dispatch an action that sets this state variable directly.</p><p name="e0fa" id="e0fa" class="graf graf--p graf-after--p">This is all fairly similar to what we’ve been doing so far, the only interesting part is knowing when to display the button (as soon as at least 3 topics are chosen). We may be tempted to add another state variable for this purpose, but this variable can actually be derived from data we already have in the state now. This means we should implement this business logic as a <em class="markup--em markup--p-em">selector</em>:</p><figure name="18ad" id="18ad" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/cbe578828ebc930e0a69be82ee6e268c?maxWidth=700" data-media-id="cbe578828ebc930e0a69be82ee6e268c" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="ec43" id="ec43" class="graf graf--p graf-after--figure">The full implementation of the above is available <a href="https://github.com/wix/react-dataflow-example/blob/2884e36fb3549b7aeb405145bef9e5f75eefaa1b/src/containers/TopicsScreen.js" data-href="https://github.com/wix/react-dataflow-example/blob/2884e36fb3549b7aeb405145bef9e5f75eefaa1b/src/containers/TopicsScreen.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>. In order to do the actual screen switch, we’ll need to change <code class="markup--code markup--p-code">App</code> into a connected component and have it listen on <code class="markup--code markup--p-code">selectionFinalized</code> in its <code class="markup--code markup--p-code">mapStateToProps</code>. The full implementation is available <a href="https://github.com/wix/react-dataflow-example/blob/5c9504d7138dfa08f98a77fc56c906288e4047e3/src/App.js" data-href="https://github.com/wix/react-dataflow-example/blob/5c9504d7138dfa08f98a77fc56c906288e4047e3/src/App.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><h4 name="7cf5" id="7cf5" class="graf graf--h4 graf-after--p">The posts screen — once again state first</h4><p name="5f89" id="5f89" class="graf graf--p graf-after--h4">Since we’re now well experienced in the methodology, we can run through implementing the second screen a bit faster. This new screen deals with a new domain — <em class="markup--em markup--p-em">posts</em>. In order to make our app modular as possible, we’ll give this domain a separate <em class="markup--em markup--p-em">reducer</em> and separate app state.</p><p name="0372" id="0372" class="graf graf--p graf-after--p">Reminder — the screen’s purpose is to display a list of posts that can be filtered according to topic. The user can click on a post in the list and see its content. Following our structuring <a href="https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4" data-href="https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4" class="markup--anchor markup--p-anchor" target="_blank">tips</a>, this would work:</p><figure name="cb97" id="cb97" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/691ad95710ad48c7fe7bfd3584f4a874?maxWidth=700" data-media-id="691ad95710ad48c7fe7bfd3584f4a874" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="1639" id="1639" class="graf graf--p graf-after--figure">And our new <em class="markup--em markup--p-em">posts</em> reducer is <a href="https://github.com/wix/react-dataflow-example/blob/29f7a950a3c51143c4df85d92952a771014fb4ba/src/store/posts/reducer.js" data-href="https://github.com/wix/react-dataflow-example/blob/29f7a950a3c51143c4df85d92952a771014fb4ba/src/store/posts/reducer.js" class="markup--anchor markup--p-anchor" target="_blank">born</a>.</p><h4 name="1f0e" id="1f0e" class="graf graf--h4 graf-after--p">First scenario — showing the posts list without filter</h4><p name="d914" id="d914" class="graf graf--p graf-after--h4">As usual, when our state is modeled, we move to a simple user scenario and implement it from start to finish. Let’s start with showing the full post list without any filter applied.</p><p name="8a59" id="8a59" class="graf graf--p graf-after--p">We need a new smart container to show the posts, we’ll call it <code class="markup--code markup--p-code">PostsScreen</code> and have it dispatch a new action called <code class="markup--code markup--p-code">fetchPosts</code> when it mounts. The action will be a <em class="markup--em markup--p-em">thunk</em> under our new domain in <code class="markup--code markup--p-code">posts/actions.js</code></p><p name="3f06" id="3f06" class="graf graf--p graf-after--p">This is very similar to what we did before, the implementation is <a href="https://github.com/wix/react-dataflow-example/blob/1298dc958b5c4c1b01b8f3f187f127d0dc291694/src/store/posts/actions.js" data-href="https://github.com/wix/react-dataflow-example/blob/1298dc958b5c4c1b01b8f3f187f127d0dc291694/src/store/posts/actions.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><p name="56b5" id="56b5" class="graf graf--p graf-after--p">At the end of the thunk we dispatch the plain action <code class="markup--code markup--p-code">POSTS_FETCHED</code> that carries the posts to the reducer. We’ll have to modify our reducer to store the data. In order to show the list in <code class="markup--code markup--p-code">PostsScreen</code>, we need to hook up its <code class="markup--code markup--p-code">mapStateToProps</code> to a selector providing this part of the state. We can then display the list by reusing our <code class="markup--code markup--p-code">ListView</code> component.</p><p name="13c7" id="13c7" class="graf graf--p graf-after--p">Nothing new as well, the implementation is <a href="https://github.com/wix/react-dataflow-example/blob/5a521145eb3a49be1bf2d0c1c529db31f7841c3d/src/containers/PostsScreen.js" data-href="https://github.com/wix/react-dataflow-example/blob/5a521145eb3a49be1bf2d0c1c529db31f7841c3d/src/containers/PostsScreen.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><h4 name="1ef9" id="1ef9" class="graf graf--h4 graf-after--p">Next scenario — filter the post list</h4><p name="682d" id="682d" class="graf graf--p graf-after--h4">This scenario starts with showing the user the available filters. We can pull this data from the <em class="markup--em markup--p-em">topics </em>reducer state using an existing selector. When a filter is changed, we will dispatch an action that will change it directly in the <em class="markup--em markup--p-em">posts</em> reducer.</p><p name="8542" id="8542" class="graf graf--p graf-after--p">The interesting part is applying the filter to the post list. In our app state we currently hold all <code class="markup--code markup--p-code">postsById</code> and the <code class="markup--code markup--p-code">currentFilter</code>. We don’t want to hold the filtered result in the app state as well because it can be derived from them. Business logic for deriving data runs in <em class="markup--em markup--p-em">selectors </em>right before arriving at the view in <code class="markup--code markup--p-code">mapStateToProps</code>. Our selector therefore will be:</p><figure name="f008" id="f008" class="graf graf--figure graf--iframe graf-after--p"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 35.699999999999996%;"></div><div class="iframeContainer"><IFRAME width="700" height="250" src="/media/2791adacfb3a9974be1b3d90deac30aa?maxWidth=700" data-media-id="2791adacfb3a9974be1b3d90deac30aa" data-thumbnail="https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&amp;key=4fce0568f2ce49e8b54624ef71a8a5bd" allowfullscreen frameborder="0"></IFRAME></div></div></figure><p name="9fb4" id="9fb4" class="graf graf--p graf-after--figure">The full implementation for this stage is available <a href="https://github.com/wix/react-dataflow-example/tree/938c0d6ef8cff2bdd66cdd8a5ad3693fd7ffaffa/src" data-href="https://github.com/wix/react-dataflow-example/tree/938c0d6ef8cff2bdd66cdd8a5ad3693fd7ffaffa/src" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p><h4 name="5f72" id="5f72" class="graf graf--h4 graf-after--p">Last scenario — showing post details</h4><p name="45ce" id="45ce" class="graf graf--p graf-after--h4">This scenario is actually the simplest one yet. We have an app state variable holding the <code class="markup--code markup--p-code">currentPostId</code>. All we have to do is update it when the user clicks on a post in the list by dispatching an action. <code class="markup--code markup--p-code">PostsScreen</code> needs this state variable in order to show the post details, which means we’ll need a <em class="markup--em markup--p-em">selector</em> to drive it in <code class="markup--code markup--p-code">mapStateToProps</code>.</p><p name="4ad0" id="4ad0" class="graf graf--p graf-after--p graf--last">Take a look at the detailed implementation <a href="https://github.com/wix/react-dataflow-example/blob/ae35eaa20b798b34225240a13a52c3e2586a4208/src/containers/PostsScreen.js" data-href="https://github.com/wix/react-dataflow-example/blob/ae35eaa20b798b34225240a13a52c3e2586a4208/src/containers/PostsScreen.js" class="markup--anchor markup--p-anchor" target="_blank">here</a>.</p></div></div></section><section name="9e2d" class="section section--body"><div class="section-divider layoutSingleColumn"><hr class="section-divider"></div><div class="section-content"><div class="section-inner layoutSingleColumn"><h4 name="a2e5" id="a2e5" class="graf graf--h4 graf--leading">And we’re done!</h4><p name="74d0" id="74d0" class="graf graf--p graf-after--h4">This also wraps up the implementation of our entire example app. The full source code of the app is available on GitHub:<br><a href="https://github.com/wix/react-dataflow-example" data-href="https://github.com/wix/react-dataflow-example" class="markup--anchor markup--p-anchor" rel="nofollow" target="_blank">https://github.com/wix/react-dataflow-example</a></p><figure name="5660" id="5660" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 128px; max-height: 128px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 100%;"></div><img class="graf-image" data-image-id="1*gVe7mIUjHcslYBUMBPGsRQ.png" data-width="128" data-height="128" draggable="false" src="https://cdn-images-1.medium.com/max/800/1*gVe7mIUjHcslYBUMBPGsRQ.png"></div></figure><h4 name="5031" id="5031" class="graf graf--h4 graf-after--figure">Summary of our opinionated workflow rules</h4><ul class="postList"><li name="d149" id="d149" class="graf graf--li graf-after--h4"><em class="markup--em markup--li-em">App state is a first class citizen, </em><a href="https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4" data-href="https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4" class="markup--anchor markup--li-anchor" target="_blank"><em class="markup--em markup--li-em">structure</em></a><em class="markup--em markup--li-em"> it like an in-memory database.</em></li><li name="0132" id="0132" class="graf graf--li graf-after--li"><em class="markup--em markup--li-em">Smart components are not allowed to have any logic except dispatching actions.</em></li><li name="7e77" id="7e77" class="graf graf--li graf-after--li"><em class="markup--em markup--li-em">Smart components should always access state through selectors.</em></li><li name="3568" id="3568" class="graf graf--li graf-after--li"><em class="markup--em markup--li-em">Minimize view logic in smart components by extracting it into dumb components.</em></li><li name="9276" id="9276" class="graf graf--li graf-after--li"><em class="markup--em markup--li-em">Place all business logic inside action handlers (thunks), selectors and reducers.</em></li><li name="fb39" id="fb39" class="graf graf--li graf-after--li graf--last"><em class="markup--em markup--li-em">Services must be completely stateless.</em></li></ul></div></div></section><section name="7f2c" class="section section--body section--last"><div class="section-divider layoutSingleColumn"><hr class="section-divider"></div><div class="section-content"><div class="section-inner layoutSingleColumn"><p name="c178" id="c178" class="graf graf--p graf--leading">Remember, Redux offers a lot of room for personal style. There are many alternate workflows with different sets of rules. Some good friends of mine come to mind who prefer <a href="https://github.com/pburtchaell/redux-promise-middleware" data-href="https://github.com/pburtchaell/redux-promise-middleware" class="markup--anchor markup--p-anchor" rel="nofollow" target="_blank">redux-promise-middleware</a> instead of <em class="markup--em markup--p-em">thunks</em> and like to place all of the business logic inside <em class="markup--em markup--p-em">reducers </em>only.</p><p name="035f" id="035f" class="graf graf--p graf-after--p graf--last">If you want to share a different methodology that works for you, feel free to PR your own implementation for the above project and we’ll provide it as a branch for comparison.</p></div></div></section></main><footer class="u-paddingTop10"><div class="container u-maxWidth740"><div class="row"><div class="col u-size12of12"></div></div><div class="row"><div class="col u-size12of12 js-postTags"><div class="u-paddingBottom10"><div class="tags tags--postTags tags--borderless"><a class="link u-baseColor--link"  href="https://hackernoon.com/tagged/react?source=post" data-action-source="post" data-collection-slug="hacker-daily">React</a><a class="link u-baseColor--link"  href="https://hackernoon.com/tagged/redux?source=post" data-action-source="post" data-collection-slug="hacker-daily">Redux</a><a class="link u-baseColor--link"  href="https://hackernoon.com/tagged/javascript?source=post" data-action-source="post" data-collection-slug="hacker-daily">JavaScript</a><a class="link u-baseColor--link"  href="https://hackernoon.com/tagged/react-native?source=post" data-action-source="post" data-collection-slug="hacker-daily">React Native</a><a class="link u-baseColor--link"  href="https://hackernoon.com/tagged/reactjs?source=post" data-action-source="post" data-collection-slug="hacker-daily">Reactjs</a></div></div></div></div><div class="row js-postActionsFooter"><div class="postActions col u-size12of12"><div class="u-floatLeft buttonSet buttonSet--withLabels"><div class="buttonSet-inner"><div class="js-actionRecommend" data-post-id="1fdf7df46092" data-is-icon-29px="true" data-has-recommend-list="true" data-source="post_actions_footer"><button class="button button--primary button--large button--chromeless is-touchIconFadeInPulse u-accentColor--buttonNormal button--withIcon button--withSvgIcon u-accentColor--iconLight js-actionRecommendButton"  title="Recommend to share this article with your followers and let the author know you liked it" aria-label="Recommend to share this article with your followers and let the author know you liked it"data-action="sign-in-prompt" data-sign-in-action="upvote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/1fdf7df46092" data-action-source="post_actions_footer"><span class="button-defaultState"><span class="svgIcon svgIcon--heart svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.215 23.716c-.348.288-.984.826-1.376 1.158a.526.526 0 0 1-.68 0c-.36-.307-.92-.78-1.22-1.03C9.22 20.734 3 15.527 3 10.734 3 7.02 5.916 4 9.5 4c1.948 0 3.77.898 5 2.434C15.73 4.898 17.552 4 19.5 4c3.584 0 6.5 3.02 6.5 6.734 0 4.9-6.125 9.96-9.785 12.982zM19.5 5.2c-1.774 0-3.423.923-4.41 2.468a.699.699 0 0 1-.59.323.706.706 0 0 1-.59-.32c-.988-1.54-2.637-2.47-4.41-2.47-2.922 0-5.3 2.49-5.3 5.54 0 4.23 6.19 9.41 9.517 12.19.217.18.566.48.783.66l.952-.79c3.496-2.88 9.348-7.72 9.348-12.05 0-3.05-2.378-5.53-5.3-5.53z"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--heartFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M19.5 4c-1.948 0-3.77.898-5 2.434C13.27 4.898 11.448 4 9.5 4 5.916 4 3 7.02 3 10.734c0 4.793 6.227 10 9.95 13.11.296.25.853.723 1.212 1.03.196.166.48.166.677 0 .39-.332 1.02-.87 1.37-1.158 3.66-3.022 9.79-8.08 9.79-12.982C26 7.02 23.08 4 19.5 4z" fill-rule="evenodd"/></svg></span></span></button><button class="button button--chromeless u-baseColor--buttonNormal"  data-action="show-recommends" data-action-value="1fdf7df46092">140</button></div></div><div class="buttonSet-inner"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  data-action="scroll-to-responses" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--response svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.27 20.058c1.89-1.826 2.754-4.17 2.754-6.674C24.024 8.21 19.67 4 14.1 4 8.53 4 4 8.21 4 13.384c0 5.175 4.53 9.385 10.1 9.385 1.007 0 2-.14 2.95-.41.285.25.592.49.918.7 1.306.87 2.716 1.31 4.19 1.31.276-.01.494-.14.6-.36a.625.625 0 0 0-.052-.65c-.61-.84-1.042-1.71-1.282-2.58a5.417 5.417 0 0 1-.154-.75zm-3.85 1.324l-.083-.28-.388.12a9.72 9.72 0 0 1-2.85.424c-4.96 0-8.99-3.706-8.99-8.262 0-4.556 4.03-8.263 8.99-8.263 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32c0 .07 0 .19.02.37.03.29.1.6.19.92.19.7.49 1.4.89 2.08-.93-.14-1.83-.49-2.67-1.06-.34-.22-.88-.48-1.16-.74z"/></svg></span></button><button class="button button--chromeless u-baseColor--buttonNormal"  data-action="scroll-to-responses">1</button></div></div><div class="u-floatRight buttonSet buttonSet--narrow"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--twitter svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z"/></svg></span></button><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--facebook svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4"/></svg></span></button></div></div></div></div><div class="js-postPromotionWrapper postPromotionWrapper" data-location-id="footer_above_post_attribution"></div><div class="container u-maxWidth740 js-postAttributionFooterContainer"><div class="u-margin20"></div><div class="row js-postFooterInfo"><div class="col u-size6of12 u-xs-size12of12"><li class="card card-user"><div class="u-marginLeft20 u-floatRight"><span class="followState js-followState buttonSet-inner" data-user-id="83a4f96844d0"><button class="button button--small u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton" data-action="sign-in-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-action-source="footer_card"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton" data-action="sign-in-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/83a4f96844d0" data-action-source="footer_card_follow"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span></div><div class="u-tableCell "><a class="link avatar u-baseColor--link"  href="https://hackernoon.com/@talkol?source=footer_card" title="Go to the profile of Tal Kol" aria-label="Go to the profile of Tal Kol" data-action-source="footer_card" data-user-id="83a4f96844d0" data-collection-slug="hacker-daily" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/60/60/1*RvlrG_Pdhzb4RmV6aeHnrg.png" class="avatar-image avatar-image--small" alt="Go to the profile of Tal Kol"></a></div><div class="card-content"><h3 class="card-name"><a class="link link--primary u-accentColor--hoverTextNormal"  href="https://hackernoon.com/@talkol" property="cc:attributionName" title="Go to the profile of Tal Kol" aria-label="Go to the profile of Tal Kol" rel="author cc:attributionUrl" data-user-id="83a4f96844d0" data-collection-slug="hacker-daily" dir="auto">Tal Kol</a></h3><p class="card-description">Full-stack developer. Co-founded two technology companies, the latter acquired by Wix.com.</p></div></li></div><div class="col u-size6of12 u-xs-size12of12 u-xs-marginTop30 u-xs-marginBottom20"><li class="card card-collection"><div class="u-marginLeft20 u-floatRight"><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal js-relationshipButton" data-action="sign-in-prompt" data-sign-in-action="toggle-follow-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/hacker-daily" data-collection-id="3a8144eabfe3"><span class="button-label  js-buttonLabel">Follow</span></button></div><div class="u-tableCell "><div class="u-tableCell "><a class="link avatar avatar--roundedRectangle u-baseColor--link"  href="https://hackernoon.com?source=footer_card" title="Go to Hacker Noon" aria-label="Go to Hacker Noon" data-action-source="footer_card" data-collection-slug="hacker-daily"><img src="https://cdn-images-1.medium.com/fit/c/60/60/1*76XiKOa05Yya6_CdYX8pVg.jpeg" class="avatar-image u-size60x60" alt="Hacker Noon"></a></div></div><div class="card-content"><h3 class="card-name"><a class="link link--primary u-accentColor--hoverTextNormal"  href="https://hackernoon.com?source=footer_card" rel="collection" data-action-source="footer_card" data-collection-slug="hacker-daily">Hacker Noon</a></h3><p class="card-description">how hackers start their afternoons.</p><div class="buttonSet"></div></div></li></div></div></div><div class="js-postBundleWrapper postBundleWrapper"></div><div class="js-postFooterPlacements"></div><div class="responsesWrapper supplementalPostContent js-responsesWrapper"></div><div class="supplementalPostContent js-readNext"></div><div class="supplementalPostContent js-heroPromo"></div></footer></article><div class="promoCardWrapper u-fixed js-promoCardWrapper"><div class="promoCard u-padding20 u-backgroundWhite u-textColorDarker"><button class="button button--close button--chromeless u-baseColor--buttonNormal"  data-action="popup-dismiss">&times;</button><div class="u-uiTextRegular u-paddingBottom20 u-paddingRight30 u-fontSizeSmall u-lineHeightTight u-marginBottom20 u-borderBottomLightest">Don’t miss Tal Kol’s next story</div><div class="u-floatRight"><span class="followState js-followState buttonSet-inner" data-user-id="83a4f96844d0"><button class="button u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton" data-action="sign-in-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-action-source="user_follow_popup"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton" data-action="sign-in-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/83a4f96844d0" data-action-source="user_follow_popup_follow"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span></div><div class="avatar"><img  src="https://cdn-images-1.medium.com/fit/c/40/40/1*RvlrG_Pdhzb4RmV6aeHnrg.png" class="avatar-image avatar-image--smaller" alt="Tal Kol"><span class="avatar-text">Tal Kol</span></div></div></div><style class="js-collectionStyle">
.u-accentColor--borderLight {border-color: #00A600 !important;}
.u-accentColor--borderNormal {border-color: #00A600 !important;}
.u-accentColor--borderDark {border-color: #008E00 !important;}
.u-accentColor--iconLight .svgIcon,.u-accentColor--iconLight.svgIcon {fill: #00A600 !important;}
.u-accentColor--iconNormal .svgIcon,.u-accentColor--iconNormal.svgIcon {fill: #00A600 !important;}
.u-accentColor--iconDark .svgIcon,.u-accentColor--iconDark.svgIcon {fill: #008E00 !important;}
.u-accentColor--textNormal {color: #008E00 !important;}
.u-accentColor--hoverTextNormal:hover {color: #008E00 !important;}
.u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #008100 !important;}
.u-accentColor--textDark {color: #008100 !important;}
.u-accentColor--backgroundLight {background-color: #00A600 !important;}
.u-accentColor--backgroundNormal {background-color: #00A600 !important;}
.u-accentColor--backgroundDark {background-color: #008E00 !important;}
.u-accentColor--buttonDark {border-color: #008E00 !important; color: #008100 !important;}
.u-accentColor--buttonDark:hover {border-color: #008100 !important;}
.u-accentColor--buttonDark .icon:before,.u-accentColor--buttonDark .svgIcon{color: #008E00 !important; fill: #008E00 !important;}
.u-accentColor--buttonNormal {border-color: #00A600 !important; color: #008E00 !important;}
.u-accentColor--buttonNormal:hover {border-color: #008E00 !important;}
.u-accentColor--buttonNormal .icon:before,.u-accentColor--buttonNormal .svgIcon{color: #00A600 !important; fill: #00A600 !important;}
.u-accentColor--buttonNormal.button--filled .icon:before,.u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-accentColor--buttonDark.button--filled,.u-accentColor--buttonDark.button--withChrome.is-active,.u-accentColor--fillWhenActive.is-active {background-color: #008E00 !important; border-color: #008E00 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-accentColor--buttonNormal.button--filled,.u-accentColor--buttonNormal.button--withChrome.is-active {background-color: #00A600 !important; border-color: #00A600 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.postArticle.is-withAccentColors .markup--user,.postArticle.is-withAccentColors .markup--query {color: #008E00 !important;}.u-tintBgColor {background-color: rgba(0, 255, 0, 1) !important;}.u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(0, 255, 0, 1) 0%, rgba(0, 255, 0, 0) 100%) !important;}.u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(0, 255, 0, 0) 0%, rgba(0, 255, 0, 1) 100%) !important;}
.u-tintSpectrum .u-baseColor--borderLight {border-color: #00B400 !important;}
.u-tintSpectrum .u-baseColor--borderNormal {border-color: #009200 !important;}
.u-tintSpectrum .u-baseColor--borderDark {border-color: #006D00 !important;}
.u-tintSpectrum .u-baseColor--iconLight .svgIcon,.u-tintSpectrum .u-baseColor--iconLight.svgIcon {fill: #00B400 !important;}
.u-tintSpectrum .u-baseColor--iconNormal .svgIcon,.u-tintSpectrum .u-baseColor--iconNormal.svgIcon {fill: #009200 !important;}
.u-tintSpectrum .u-baseColor--iconDark .svgIcon,.u-tintSpectrum .u-baseColor--iconDark.svgIcon {fill: #006D00 !important;}
.u-tintSpectrum .u-baseColor--textNormal {color: #009200 !important;}
.u-tintSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: #005900 !important;}
.u-tintSpectrum .u-baseColor--textDark {color: #005900 !important;}
.u-tintSpectrum .u-baseColor--backgroundLight {background-color: #00B400 !important;}
.u-tintSpectrum .u-baseColor--backgroundNormal {background-color: #009200 !important;}
.u-tintSpectrum .u-baseColor--backgroundDark {background-color: #006D00 !important;}
.u-tintSpectrum .u-baseColor--buttonLight {border-color: #00B400 !important; color: #00B400 !important;}
.u-tintSpectrum .u-baseColor--buttonLight:hover {border-color: #00B400 !important;}
.u-tintSpectrum .u-baseColor--buttonLight .icon:before,.u-tintSpectrum .u-baseColor--buttonLight .svgIcon {color: #00B400 !important; fill: #00B400 !important;}
.u-tintSpectrum .u-baseColor--buttonDark {border-color: #006D00 !important; color: #005900 !important;}
.u-tintSpectrum .u-baseColor--buttonDark:hover {border-color: #005900 !important;}
.u-tintSpectrum .u-baseColor--buttonDark .icon:before,.u-tintSpectrum .u-baseColor--buttonDark .svgIcon {color: #006D00 !important; fill: #006D00 !important;}
.u-tintSpectrum .u-baseColor--buttonNormal {border-color: #009200 !important; color: #009200 !important;}
.u-tintSpectrum .u-baseColor--buttonNormal:hover {border-color: #006D00 !important;}
.u-tintSpectrum .u-baseColor--buttonNormal .icon:before,.u-tintSpectrum .u-baseColor--buttonNormal .svgIcon {color: #009200 !important; fill: #009200 !important;}
.u-tintSpectrum .u-baseColor--buttonDark.button--filled,.u-tintSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: #006D00 !important; border-color: #006D00 !important; color: rgba(0, 255, 0, 1) !important; fill: rgba(0, 255, 0, 1) !important;}
.u-tintSpectrum .u-baseColor--buttonNormal.button--filled,.u-tintSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: #009200 !important; border-color: #009200 !important; color: rgba(0, 255, 0, 1) !important; fill: rgba(0, 255, 0, 1) !important;}
.u-tintSpectrum .u-baseColor--link {color: #009200 !important;}
.u-tintSpectrum .u-baseColor--link.link--darken:hover,.u-tintSpectrum .u-baseColor--link.link--darken:focus,.u-tintSpectrum .u-baseColor--link.link--darken:active {color: #005900 !important;}
.u-tintSpectrum .u-baseColor--link.link--dark {color: #005900 !important;}
.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:active {color: #005900 !important;}
.u-tintSpectrum .u-baseColor--link.link--darker {color: #005900 !important;}
.u-tintSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: #00B400;}
.u-tintSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: #00B400;}
.u-tintSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: #00B400;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: #00E200 !important;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: #00D300 !important;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: #00B400 !important;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: #009200 !important;}
.u-tintSpectrum .u-accentColor--borderLight {border-color: #00B400 !important;}
.u-tintSpectrum .u-accentColor--borderNormal {border-color: #009200 !important;}
.u-tintSpectrum .u-accentColor--borderDark {border-color: #006D00 !important;}
.u-tintSpectrum .u-accentColor--iconLight .svgIcon,.u-tintSpectrum .u-accentColor--iconLight.svgIcon {fill: #00B400 !important;}
.u-tintSpectrum .u-accentColor--iconNormal .svgIcon,.u-tintSpectrum .u-accentColor--iconNormal.svgIcon {fill: #009200 !important;}
.u-tintSpectrum .u-accentColor--iconDark .svgIcon,.u-tintSpectrum .u-accentColor--iconDark.svgIcon {fill: #006D00 !important;}
.u-tintSpectrum .u-accentColor--textNormal {color: #009200 !important;}
.u-tintSpectrum .u-accentColor--hoverTextNormal:hover {color: #009200 !important;}
.u-tintSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #005900 !important;}
.u-tintSpectrum .u-accentColor--textDark {color: #005900 !important;}
.u-tintSpectrum .u-accentColor--backgroundLight {background-color: #00B400 !important;}
.u-tintSpectrum .u-accentColor--backgroundNormal {background-color: #009200 !important;}
.u-tintSpectrum .u-accentColor--backgroundDark {background-color: #006D00 !important;}
.u-tintSpectrum .u-accentColor--buttonDark {border-color: #006D00 !important; color: #005900 !important;}
.u-tintSpectrum .u-accentColor--buttonDark:hover {border-color: #005900 !important;}
.u-tintSpectrum .u-accentColor--buttonDark .icon:before,.u-tintSpectrum .u-accentColor--buttonDark .svgIcon{color: #006D00 !important; fill: #006D00 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal {border-color: #009200 !important; color: #009200 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal:hover {border-color: #006D00 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal .icon:before,.u-tintSpectrum .u-accentColor--buttonNormal .svgIcon{color: #009200 !important; fill: #009200 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-tintSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 255, 0, 1) !important; fill: rgba(0, 255, 0, 1) !important;}
.u-tintSpectrum .u-accentColor--buttonDark.button--filled,.u-tintSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-tintSpectrum .u-accentColor--fillWhenActive.is-active {background-color: #006D00 !important; border-color: #006D00 !important; color: rgba(0, 255, 0, 1) !important; fill: rgba(0, 255, 0, 1) !important;}
.u-tintSpectrum .u-accentColor--buttonNormal.button--filled,.u-tintSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active {background-color: #009200 !important; border-color: #009200 !important; color: rgba(0, 255, 0, 1) !important; fill: rgba(0, 255, 0, 1) !important;}
.u-tintSpectrum .postArticle.is-withAccentColors .markup--user,.u-tintSpectrum .postArticle.is-withAccentColors .markup--query {color: #009200 !important;}
.u-accentColor--highlightFaint {background-color: rgba(203, 255, 186, 1) !important;}
.u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(110, 255, 89, 1) !important;}
.postArticle.is-withAccentColors .markup--quote.is-other {background-color: rgba(203, 255, 186, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(203, 255, 186, 1), rgba(203, 255, 186, 1));}
.postArticle.is-withAccentColors .markup--quote.is-me {background-color: rgba(157, 255, 134, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(157, 255, 134, 1), rgba(157, 255, 134, 1));}
.postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: rgba(110, 255, 89, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(110, 255, 89, 1), rgba(110, 255, 89, 1));}
.postArticle.is-withAccentColors .markup--quote.is-selected {background-color: rgba(110, 255, 89, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(110, 255, 89, 1), rgba(110, 255, 89, 1));}
.postArticle.is-withAccentColors .markup--highlight {background-color: rgba(110, 255, 89, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(110, 255, 89, 1), rgba(110, 255, 89, 1));}</style><style class="js-collectionStyleConstant">.u-imageBgColor {background-color: rgba(0, 0, 0, 0.24705882352941178);}
.u-imageSpectrum .u-baseColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-baseColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-baseColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--iconLight .svgIcon,.u-imageSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--iconNormal .svgIcon,.u-imageSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--iconDark .svgIcon,.u-imageSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textDark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-baseColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important; color: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-baseColor--buttonLight .icon:before,.u-imageSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(255, 255, 255, 0.8) !important; fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonDark .icon:before,.u-imageSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal .icon:before,.u-imageSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonDark.button--filled,.u-imageSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal.button--filled,.u-imageSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-baseColor--link {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--link.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--darken:active {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--dark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--darker {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(255, 255, 255, 0.4) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(255, 255, 255, 0.4980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--iconLight .svgIcon,.u-imageSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-accentColor--iconNormal .svgIcon,.u-imageSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--iconDark .svgIcon,.u-imageSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--textDark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark .icon:before,.u-imageSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-accentColor--buttonDark.button--filled,.u-imageSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-imageSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal.button--filled,.u-imageSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .postArticle.is-withAccentColors .markup--user,.u-imageSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--highlightFaint {background-color: rgba(255, 255, 255, 0.2) !important;}
.u-imageSpectrum .u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(255, 255, 255, 0.6) !important;}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: rgba(255, 255, 255, 0.2) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: rgba(255, 255, 255, 0.4) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}.u-resetSpectrum .u-tintBgColor {background-color: rgba(255, 255, 255, 1) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 100%) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%) !important;}
.u-resetSpectrum .u-baseColor--borderLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--borderNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--borderDark {border-color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--iconLight .svgIcon,.u-resetSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--iconNormal .svgIcon,.u-resetSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--iconDark .svgIcon,.u-resetSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textNormal {color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textDark {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--backgroundLight {background-color: rgba(0, 0, 0, 0.09803921568627451) !important;}
.u-resetSpectrum .u-baseColor--backgroundNormal {background-color: rgba(0, 0, 0, 0.2) !important;}
.u-resetSpectrum .u-baseColor--backgroundDark {background-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight .icon:before,.u-resetSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(0, 0, 0, 0.2980392156862745) !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonDark {border-color: rgba(0, 0, 0, 0.6) !important; color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--buttonDark .icon:before,.u-resetSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(0, 0, 0, 0.6) !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important; color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal .icon:before,.u-resetSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(0, 0, 0, 0.4980392156862745) !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonDark.button--filled,.u-resetSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2980392156862745) !important; border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal.button--filled,.u-resetSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2) !important; border-color: rgba(0, 0, 0, 0.2) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-baseColor--link {color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--link.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--darken:active {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--dark {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--link.link--darker {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(0, 0, 0, 0.2) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(0, 0, 0, 0.4) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-accentColor--borderLight {border-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--borderNormal {border-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--borderDark {border-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--iconLight .svgIcon,.u-resetSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--iconNormal .svgIcon,.u-resetSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--iconDark .svgIcon,.u-resetSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--textNormal {color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--textDark {color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundLight {background-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundNormal {background-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundDark {background-color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark {border-color: rgba(0, 171, 107, 1) !important; color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark .icon:before,.u-resetSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(28, 153, 99, 1) !important; fill: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal {border-color: rgba(2, 184, 117, 1) !important; color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(0, 171, 107, 1) !important; fill: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark.button--filled,.u-resetSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-resetSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(28, 153, 99, 1) !important; border-color: rgba(28, 153, 99, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal.button--filled,.u-resetSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active {background-color: rgba(0, 171, 107, 1) !important; border-color: rgba(0, 171, 107, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .postArticle.is-withAccentColors .markup--user,.u-resetSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(0, 171, 107, 1) !important;}</style></div></div></div><div class="loadingBar"></div><script>// <![CDATA[
window["obvInit"] = function (opt_embedded) {window["obvInit"]["embedded"] = opt_embedded; window["obvInit"]["ready"] = true;}
// ]]></script><script>// <![CDATA[
var GLOBALS = {"audioUrl":"https://d1fcbxp97j4nb2.cloudfront.net","baseUrl":"https://hackernoon.com","bestOfFirstSlug":"may-2013","bestOfLatestSlug":"april-2016","buildLabel":"25607-7d8f7c1","currentUser":{"userId":"lo_d55b5011565c","isVerified":false,"subscriberEmail":""},"currentUserHasUnverifiedEmail":false,"isAuthenticated":false,"isCurrentUserVerified":false,"loadingPlaceholderImg":"https://cdn-static-1.medium.com/_/fp/img/media-loading-placeholder.b31hiO4ynbDLRrXWEFF4aQ.png","mediumTwitterScreenName":"medium","miroUrl":"https://cdn-images-1.medium.com","moduleUrls":{"base":"https://cdn-static-1.medium.com/_/fp/js/main-base.bundle.nGQKH9TIdrNRn1Qx9AFgbQ.js","notes":"https://cdn-static-1.medium.com/_/fp/js/main-notes.bundle.6XSvaHN74BzTG9cEaYeB6g.js","posters":"https://cdn-static-1.medium.com/_/fp/js/main-posters.bundle.--tpMEWcFPqMwm2RItylkg.js","common-async":"https://cdn-static-1.medium.com/_/fp/js/main-common-async.bundle.EuB6Qe8VQJU5rY14uWTPaQ.js","stats":"https://cdn-static-1.medium.com/_/fp/js/main-stats.bundle.CmZeLBJB0p2QWjgveZXEdw.js","misc-screens":"https://cdn-static-1.medium.com/_/fp/js/main-misc-screens.bundle.dyHsRrWZX0twzK5PLcfjpQ.js"},"postColumnWidth":700,"previewConfig":{"weightThreshold":1,"weightImageParagraph":0.51,"weightIframeParagraph":0.8,"weightTextParagraph":0.08,"weightEmptyParagraph":0,"weightP":0.003,"weightH":0.005,"weightBq":0.003,"minPTextLength":60,"truncateBoundaryChars":20,"detectTitle":true,"detectTitleLevThreshold":0.15},"productName":"Medium","supportsEdit":false,"termsUrl":"//medium.com/policy/9db0094a1e0f","textshotHost":"textshot.medium.com","transactionId":"1476802382500:cb998ca92336","useragent":{"browser":"appengine-google","family":"","os":"","version":0,"supportsDesktopEdit":false,"supportsInteract":false,"supportsView":true,"isMobile":false,"isTablet":false,"isNative":false,"supportsFileAPI":false,"isTier1":false,"clientVersion":"","unknownParagraphsBad":false,"clientChannel":"","supportsRealScrollEvents":false,"supportsVhUnits":false,"ruinsViewportSections":false,"supportsHtml5Video":false,"supportsMagicUnderlines":false,"isFacebook":false,"isWebView":false,"isFacebookWebView":false,"supportsProgressiveMedia":false,"isGoogle":false,"isApple":false,"supportsPromotedPosts":true,"isBing":false,"isYahoo":false,"isTwitter":false,"isBaidu":false,"isSlack":false,"isSimplePie":false,"isYandex":false,"isBot":false,"isSocialMediaBot":false,"supportsScrollableMetabar":false},"variants":{"allow_access":true,"allow_signup":true,"allow_test_auth":"disallow","signin_services":"twitter,facebook,google,email,google-fastidv","signup_services":"twitter,facebook,google,email,google-fastidv","enable_smyte_integration":true,"android_rating_prompt_recommend_threshold":5,"google_sign_in_android":true,"enable_onboarding":true,"custom_miro_url":"https://cdn-images-1.medium.com","ios_custom_miro_url":"https://cdn-images-1.medium.com","reengagement_notification_duration":3,"enable_inline_code_creation":true,"enable_related_reads_webui":true,"enable_hopper_for_tag_based_post_bundles":true,"enable_next_tick_update":true,"enable_ranked_feed_rescoring":true,"enable_similar_post_provider":true,"enable_deep_social_graph_provider":true,"enable_adsnative_integration":true,"browsable_stream_config_bucket":"curated","ios_small_post_preview_truncation_length":5.5,"ios_large_post_preview_truncation_length":5.5,"disable_ios_catalog_badging":true,"enable_ranked_feed_survey_promo":true,"enable_textshots_v2":true,"enable_textshots_v2_web_ui":true,"enable_dark_sign_in_modals":true,"enable_ios_personalization_promo":true,"enable_personalization_station_web":true,"add_top_stories_in_digest":true,"digest_experiment":"control","enable_prepublish_share_settings":true,"enable_direct_auth_connect":true,"enable_prepublish_twitter_connect":true,"enable_hide_response_on_parent_post":true,"enable_sponsored_post_labelling":true,"enable_collection_post_nav_item":true,"stream_publication_homepage":true,"enable_logged_out_fixed_post_action_metabar":true,"enable_logged_in_follow_on_collection_post":true,"enable_placements":true,"social_recs_weight_factor":1,"digest_total_post_count":30,"digest_posts_count_published_by_followed_users_and_collections":5,"digest_posts_count_recommended_by_users":5,"digest_posts_count_recommended_by_staff":5,"digest_posts_count_per_tag":2,"enable_prepublish_facebook_share":true,"enable_prepublish_facebook_connect":true,"promoted_story_placement_locations":"POST_PAGE_FOOTER","enable_story_management_view":true,"enable_story_management_view_tabs":true,"enable_story_management_scheduled_tab":true,"enable_stats_response_filtering":true,"enable_ios_feature_education":true,"enable_publication_headers2":true,"enable_related_reads_curse_words_filtering":true,"enable_normalized_email_check":true,"enable_search_collection_by_tag_recency_filter":true,"search_collection_by_tag_filter_min_votes":10,"enable_stream_ttr_on_post_page":true,"enable_links_open_in_new_tabs":true,"scroll_to_next_stack_size":5,"slow_retries_on_throttling":true,"enable_curated_placements":true,"enable_user_blocks_bloom_filter":true,"show_read_history":true,"enable_sentiment_analysis":true,"honeypot_strategy":"entity","enable_share_widget":true,"enable_catalog_takeover_route":true,"show_more_placements":"control"},"xsrfToken":"","iosAppId":"828256236","supportEmail":"yourfriends@medium.com","teamName":"Team Medium","fp":{"/img/apple-touch-icon-ipad-retina.png":"https://cdn-static-1.medium.com/_/fp/img/apple-touch-icon-ipad-retina.Akq8aSfZqfW1fceMxKqBZA.png","/img/apple-touch-icon-iphone-retina.png":"https://cdn-static-1.medium.com/_/fp/img/apple-touch-icon-iphone-retina.c211N_zSkSXPQk-ggPi4mQ.png","/img/apple-touch-icon-ipad.png":"https://cdn-static-1.medium.com/_/fp/img/apple-touch-icon-ipad.LSTr_8Uf-3hSd7eDjoW_8g.png","/img/apple-touch-icon.png":"https://cdn-static-1.medium.com/_/fp/img/apple-touch-icon.JWwtHOsKxVkBzoR3FSccjw.png","/img/default-avatar.png":"https://cdn-static-1.medium.com/_/fp/img/default-avatar.dmbNkD5D-u45r44go_cf0g.png","/img/default-preview-image.png":"https://cdn-static-1.medium.com/_/fp/img/default-preview-image.IsBK38jFAJBlWifMLO4z9g.png","/img/default-preview-image-v2.png":"https://cdn-static-1.medium.com/_/fp/img/default-preview-image-v2.MXL-j6S8fTEd8UFP_foEEw.png","/img/email/app_store_badge@2x.png":"https://cdn-static-1.medium.com/_/fp/img/email/app_store_badge@2x.8bDQGNMm-Xs7Hz6WA2XquQ.png","/img/email/app-devices@2x.png":"https://cdn-static-1.medium.com/_/fp/img/email/app-devices@2x.6hgpI423F62SKyT8Lo6dzA.png","/img/email/check1.png":"https://cdn-static-1.medium.com/_/fp/img/email/check1.0DM77li7vZhq5o2V9cVYLQ.png","/img/email/check2.png":"https://cdn-static-1.medium.com/_/fp/img/email/check2.GLlNusQmn1hwo9WDN-gE1w.png","/img/email/check3.png":"https://cdn-static-1.medium.com/_/fp/img/email/check3.7VxOUVMXAVbHRRnzMrJ_5A.png","/img/email/email-logo.png":"https://cdn-static-1.medium.com/_/fp/img/email/email-logo.x91rxfZYzIT9OJ5-ySD30A.png","/img/email/fb_logo.png":"https://cdn-static-1.medium.com/_/fp/img/email/fb_logo.Q0M98YwNTu77gLWTK6-RyQ.png","/img/email/google_play_badge@2x.png":"https://cdn-static-1.medium.com/_/fp/img/email/google_play_badge@2x.iWEWlt5_Qj20rr79-IGEBQ.png","/img/email/heart.png":"https://cdn-static-1.medium.com/_/fp/img/email/heart._hlyuYQiuuTWrRmDnDphJA.png","/img/email/heart@2x.png":"https://cdn-static-1.medium.com/_/fp/img/email/heart@2x.qvCTX1XHNpntqxt01oypQw.png","/img/email/heart1.png":"https://cdn-static-1.medium.com/_/fp/img/email/heart1.rnGEmSwcGUhztl_zSU7l6Q.png","/img/email/heart2.png":"https://cdn-static-1.medium.com/_/fp/img/email/heart2.HBiLu3koIYsKjjKroohgbA.png","/img/email/heart3.png":"https://cdn-static-1.medium.com/_/fp/img/email/heart3.AIJBOHw11HuhdClVJNtmtg.png","/img/email/large.png":"https://cdn-static-1.medium.com/_/fp/img/email/large.4EIhZbIk5sgqYSoB4YPmUA.png","/img/email/response.png":"https://cdn-static-1.medium.com/_/fp/img/email/response.5ZuN24N5XqS7ofHKg1lKXw.png","/img/email/response@2x.png":"https://cdn-static-1.medium.com/_/fp/img/email/response@2x.xzKQM4FzSurAVkghLQQWkA.png","/img/email/trophy.png":"https://cdn-static-1.medium.com/_/fp/img/email/trophy.YXqqMnNASKQDXZ46YdTWFA.png","/img/email/twitter_logo.png":"https://cdn-static-1.medium.com/_/fp/img/email/twitter_logo.Pz4a3o9WMU5QioxLKcyFhQ.png","/img/email/unlisted.png":"https://cdn-static-1.medium.com/_/fp/img/email/unlisted.ikh8R2LElOz_1YM8A2Db4g.png","/img/email/welcome-heart.png":"https://cdn-static-1.medium.com/_/fp/img/email/welcome-heart.6BRCOGcwGeOCBTql8pbq2g.png","/img/email/welcome-response.png":"https://cdn-static-1.medium.com/_/fp/img/email/welcome-response.iWVQLjiUG5pyQrPyGiYEpw.png","/img/email/welcome-write.png":"https://cdn-static-1.medium.com/_/fp/img/email/welcome-write.afdGsuE6YDk3HkaIASRl0w.png","/img/help/add-media-start.gif":"https://cdn-static-1.medium.com/_/fp/img/help/add-media-start.GXmqQ2Svt1WfZGIZSM93tg.gif","/img/help/add-media.gif":"https://cdn-static-1.medium.com/_/fp/img/help/add-media.SZH2LBmkwVExuhozFfVvYg.gif","/img/help/embed-start.gif":"https://cdn-static-1.medium.com/_/fp/img/help/embed-start.EBJ2PcWFJuYopsQV4wwklA.gif","/img/help/embed.gif":"https://cdn-static-1.medium.com/_/fp/img/help/embed.1BM0Di9vd91Kv8fLioJabw.gif","/img/help/text-highlight-start.gif":"https://cdn-static-1.medium.com/_/fp/img/help/text-highlight-start.AvTbakaFuUCd05YoMECoMQ.gif","/img/help/text-highlight.gif":"https://cdn-static-1.medium.com/_/fp/img/help/text-highlight.XVChoKYZ1-s3gJgHm9-7Yg.gif","/img/help/2.0-add-media.gif":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-add-media.LhrJcTFODoqjnPPuHNEInA.gif","/img/help/2.0-add-media-start.png":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-add-media-start.PTVdm36977cSfaYOpMNTNQ.png","/img/help/2.0-highlight-menu.gif":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-highlight-menu.eqlvF_kPTaDVcWZV4oPjVA.gif","/img/help/2.0-highlight-menu-start.png":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-highlight-menu-start.bkThTm0MV-KahZWttjBlJQ.png","/img/help/2.0-embed.gif":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-embed.2g5jIXYtWjsRFa9D-hBhMQ.gif","/img/help/2.0-embed-start.png":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-embed-start.LGy_FmixvcoEVIDKjg1jwA.png","/img/help/2.0-mention.gif":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-mention.H9pEv0eHAvkGUVqdrHxH5g.gif","/img/help/2.0-mention-start.png":"https://cdn-static-1.medium.com/_/fp/img/help/2.0-mention-start.ShYTOfy6w3VDU9PKFfOEyw.png","/img/help/highlight-tips-1.gif":"https://cdn-static-1.medium.com/_/fp/img/help/highlight-tips-1.dEp02HXMKtAeKxsV5MWqGg.gif","/img/help/highlight-tips-2.gif":"https://cdn-static-1.medium.com/_/fp/img/help/highlight-tips-2.SyXCciYXeNpx4-GUAuh0XQ.gif","/img/import/highlight-menu.png":"https://cdn-static-1.medium.com/_/fp/img/import/highlight-menu.kzoaVM8mJJ-Hu9m9uo3Omg.png","/img/import/image-highlight-menu.png":"https://cdn-static-1.medium.com/_/fp/img/import/image-highlight-menu.q43-H2dl0JvBS_5znQCW8A.png","/img/import/publish-metabar.png":"https://cdn-static-1.medium.com/_/fp/img/import/publish-metabar.YbEX1a2Pu0rAR_LuKeg8JA.png","/img/payments/amex.png":"https://cdn-static-1.medium.com/_/fp/img/payments/amex.5EPSpIzX7GdCzJlp6ScaDw.png","/img/payments/diners.png":"https://cdn-static-1.medium.com/_/fp/img/payments/diners.NGD5bmkc-37YhAWWR1kzZQ.png","/img/payments/discover.png":"https://cdn-static-1.medium.com/_/fp/img/payments/discover.EZDA3I2LqtScyoBjwnpyAA.png","/img/payments/jcb.png":"https://cdn-static-1.medium.com/_/fp/img/payments/jcb.r4YW_7gdVvO70Y1uobs9zw.png","/img/payments/mastercard.png":"https://cdn-static-1.medium.com/_/fp/img/payments/mastercard.pkLRUgj9PI_snp1LBC8FYQ.png","/img/payments/placeholder.png":"https://cdn-static-1.medium.com/_/fp/img/payments/placeholder.UD4yFjC9YHrS0yCBRmRwvQ.png","/img/payments/visa.png":"https://cdn-static-1.medium.com/_/fp/img/payments/visa.0d40297wdAUwEkxSXQjBoQ.png","/img/payments/credit-card-sprite.png":"https://cdn-static-1.medium.com/_/fp/img/payments/credit-card-sprite.aNIJTodZTkf86-MUkQX7Xw.png","/img/signup/signup_education.png":"https://cdn-static-1.medium.com/_/fp/img/signup/signup_education.U40idKqxw3q2V5uNY4tV2w.png","/icons/favicon.svg":"https://cdn-static-1.medium.com/_/fp/icons/favicon.KjTfUJo7yJH_fCoUzzH3cg.svg","/icons/favicon-dev-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-dev-editor.YKKRxBO8EMvIqhyCwIiJeQ.ico","/icons/favicon-hatch-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-hatch-editor.BuEyHIqlyh2s_XEk4Rl32Q.ico","/icons/favicon-medium-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-medium-editor.PiakrZWB7Yb80quUVQWM6g.ico"},"authBaseUrl":"https://medium.com","imageUploadSizeMb":25,"isAuthDomainRequest":false,"domainCollectionSlug":"hacker-daily","algoliaApiEndpoint":"https://MQ57UUUQZ2-dsn.algolia.net","algoliaAppId":"MQ57UUUQZ2","algoliaSearchOnlyApiKey":"aadabda268e3bfaffe7b287709262fec","iosAppStoreUrl":"https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8","iosAppLinkBaseUrl":"medium:","algoliaIndexPrefix":"medium_","androidPlayStoreUrl":"https://play.google.com/store/apps/details?id=com.medium.reader","googleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","androidPackage":"com.medium.reader","androidPlayStoreMarketScheme":"market://details?id=com.medium.reader","googleAuthUri":"https://accounts.google.com/o/oauth2/auth","androidScheme":"medium","layoutData":{"useDynamicScripts":false,"googleAnalyticsTrackingCode":"UA-24232453-2","jsShivUrl":"https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js","cssFontUrls":["https://cdn-static-1.medium.com/_/fp/css/fonts-base.by5Oi_VbnwEIvhnWIsuUjA.css"],"useDynamicCss":false,"faviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-medium.TAS6uQ-Y7kcKgi0xjcYHXw.ico"},"authBaseUrlRev":"moc.muidem//:sptth","isDnt":false,"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","archiveUploadSizeMb":100,"paymentData":{"currencies":{"1":{"label":"US Dollar","external":"usd"}},"countries":{"1":{"label":"United States of America","external":"US"}},"accountTypes":{"1":{"label":"Individual","external":"individual"},"2":{"label":"Company","external":"company"}}},"previewConfig2":{"weightThreshold":1,"weightImageParagraph":0.05,"raiseImage":true,"enforceHeaderHierarchy":true,"isImageInsetRight":true},"isAmp":false,"iosScheme":"medium","isSwBoot":false,"lightstep":{"accessToken":"ce5be895bef60919541332990ac9fef2","carrier":"{\"ot-tracer-spanid\":\"780402ab3136c502\",\"ot-tracer-traceid\":\"62d7e7b27943517b\",\"ot-tracer-sampled\":\"true\"}","host":"collector-medium.lightstep.com"},"facebook":{"key":"542599432471018","secret":"c14df7146e9052a1131f3c900c1f0644","token":"542599432471018|1JqjIwxSfY9jOt_KwjWEl1R7T6I","namespace":"medium-com","scope":{"default":["public_profile","email","user_friends"],"connect":["public_profile","email","user_friends"],"login":["public_profile","email","user_friends"],"share":["public_profile","email","user_friends","publish_actions"]},"smartPublishWhitelistedPublications":["bcc38c8f6edf","f3726e2a5878","828a270689e","81c7d351c056","f30e42fd7ff8","8bf1d7d3081b","d16afa0ae7c","d8f3f6ad9c31","e74de0cedea9","15f753907972","c8c6a6b01ebd","3412b9729488","2ce4bbcf83bb","544c7006046e","7bfcdbc6b30a","a268fd916824","458a773bccd2"],"instantArticles":{"published":true,"developmentMode":false}},"mailingListArchiveUploadSizeMb":2,"isDoNotAuth":false}
// ]]></script><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/js/main-base.bundle.nGQKH9TIdrNRn1Qx9AFgbQ.js" async="true"></script><script>// <![CDATA[
window["obvInit"]({"value":{"id":"1fdf7df46092","versionId":"f1dcc04e7021","creatorId":"83a4f96844d0","creator":{"userId":"83a4f96844d0","name":"Tal Kol","username":"talkol","createdAt":1465489677854,"lastPostCreatedAt":1476678953579,"imageId":"1*RvlrG_Pdhzb4RmV6aeHnrg.png","backgroundImageId":"","bio":"Full-stack developer. Co-founded two technology companies, the latter acquired by Wix.com.","twitterScreenName":"koltal","socialStats":{"userId":"83a4f96844d0","usersFollowedCount":14,"usersFollowedByCount":403,"type":"SocialStats"},"social":{"userId":"lo_39515f4547dc","targetUserId":"83a4f96844d0","type":"Social"},"facebookAccountId":"","allowNotes":1,"type":"User"},"homeCollection":{"id":"3a8144eabfe3","name":"Hacker Noon","slug":"hacker-daily","tags":["HACKATHONS","HACKING","PROGRAMMING","TECH","HACKER"],"creatorId":"3ba40c3346c4","description":"how hackers start their afternoons.","shortDescription":"how hackers start their afternoons.","image":{"imageId":"1*76XiKOa05Yya6_CdYX8pVg.jpeg","filter":"","backgroundSize":"","originalWidth":8346,"originalHeight":8346,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":33395,"postCount":489,"activeAt":1476726970945},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":""},"logo":{"imageId":"1*iPOPOotvbMB_2ZRLb6nQDw.png","filter":"","backgroundSize":"","originalWidth":3600,"originalHeight":432,"strategy":"resample","height":0,"width":0},"twitterUsername":"hackernoon","facebookPageName":"hackernoon","publicEmail":"team@c.how","collectionMastheadId":"628349c2609a","domain":"hackernoon.com","sections":[{"type":2,"collectionHeaderMetadata":{"title":"","description":"how hackers start their afternoons","backgroundImage":{},"logoImage":{"id":"1*iPOPOotvbMB_2ZRLb6nQDw@2x.png","originalWidth":3600,"originalHeight":432,"alt":"Hacker Noon"},"alignment":2,"layout":5}},{"type":1,"postListMetadata":{"source":1,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":5,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":4,"layout":4,"number":1,"postIds":[],"tagSlug":"Letters"}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":4,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":2,"number":2,"postIds":["a1e810973c5e","4ef3a839aaba"]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":6,"number":1,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["b177ab0a6b70","85fc643ccc2f","80414e0582d4"]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":24,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["95f87f51d79","e44f74a7b596","8694020b96e8"]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":6,"postIds":["88aabb0d2a7","31529b30d367","a293a4d7d4e7","d49e6bc22936","b3901584d61d"]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":6,"postIds":["7cd00926828","5bd563fbb26e","f44e381951b6","7d20a0e38997","521cb2925155","8e70452f3eed"]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":5,"postIds":[]}}],"tintColor":"#FF00FF00","lightText":false,"favicon":{"imageId":"1*76XiKOa05Yya6_CdYX8pVg.jpeg","filter":"","backgroundSize":"","originalWidth":8346,"originalHeight":8346,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF00A600","point":0},{"color":"#FF009A00","point":0.1},{"color":"#FF008E00","point":0.2},{"color":"#FF008100","point":0.3},{"color":"#FF007500","point":0.4},{"color":"#FF006800","point":0.5},{"color":"#FF005A00","point":0.6},{"color":"#FF044D01","point":0.7},{"color":"#FF083F04","point":0.8},{"color":"#FF093005","point":0.9},{"color":"#FF062004","point":1}],"backgroundColor":"#FFFFFFFF"},"tintBackgroundSpectrum":{"colorPoints":[{"color":"#FF00FF00","point":0},{"color":"#FF00F100","point":0.1},{"color":"#FF00E200","point":0.2},{"color":"#FF00D300","point":0.3},{"color":"#FF00C300","point":0.4},{"color":"#FF00B400","point":0.5},{"color":"#FF00A300","point":0.6},{"color":"#FF009200","point":0.7},{"color":"#FF008000","point":0.8},{"color":"#FF006D00","point":0.9},{"color":"#FF005900","point":1}],"backgroundColor":"#FF00FF00"},"highlightSpectrum":{"colorPoints":[{"color":"#FFD3FFC4","point":0},{"color":"#FFCBFFBA","point":0.1},{"color":"#FFC2FFB0","point":0.2},{"color":"#FFB9FFA6","point":0.3},{"color":"#FFB0FF9B","point":0.4},{"color":"#FFA7FF91","point":0.5},{"color":"#FF9DFF86","point":0.6},{"color":"#FF92FF7B","point":0.7},{"color":"#FF87FF70","point":0.8},{"color":"#FF7BFF65","point":0.9},{"color":"#FF6EFF59","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Tech","tagSlug":"tech","url":"https://hackernoon.com/tagged/tech","source":"tagSlug"},{"type":1,"title":"Productivity","tagSlug":"productivity","url":"https://hackernoon.com/tagged/productivity","source":"tagSlug"},{"type":1,"title":"Growth","tagSlug":"growth","url":"https://hackernoon.com/tagged/growth","source":"tagSlug"},{"type":1,"title":"Founder Stories","tagSlug":"founders","url":"https://hackernoon.com/tagged/founders","source":"tagSlug"},{"type":1,"title":"Letters","tagSlug":"letters","url":"https://hackernoon.com/tagged/letters","source":"tagSlug"},{"type":1,"title":"Favorites","tagSlug":"favorites","url":"https://hackernoon.com/tagged/favorites","source":"tagSlug"}],"fullTextRssFeed":1,"colorBehavior":2,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"type":"Collection"},"homeCollectionId":"3a8144eabfe3","title":"Redux Step by Step: A Simple and Robust Workflow for Real Life Apps","detectedLanguage":"en","latestVersion":"f1dcc04e7021","latestPublishedVersion":"f1dcc04e7021","hasUnpublishedEdits":false,"latestRev":2711,"createdAt":1476388140177,"updatedAt":1476679990507,"acceptedAt":0,"firstPublishedAt":1476632968178,"latestPublishedAt":1476679989197,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often…","bodyModel":{"paragraphs":[{"name":"a0db","type":3,"text":"Redux Step by Step: A Simple and Robust Workflow for Real Life Apps","markups":[]},{"name":"3e3f","type":4,"text":"no trees, just rocks","markups":[],"layout":5,"metadata":{"id":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","originalWidth":4096,"originalHeight":1454}},{"name":"7fb1","type":1,"text":"Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often causes a sensory overload where you can’t see the forest for the trees. Presented below is a straightforward and opinionated workflow for implementing real life apps with Redux. It is shown by example with a step by step implementation walkthrough of an actual app. It attempts to apply the principles behind Redux in a practical way and detail the thought process behind every decision.","markups":[{"type":2,"start":0,"end":522}]},{"name":"e2c3","type":13,"text":"An opinionated approach for idiomatic Redux","markups":[]},{"name":"91b6","type":1,"text":"Redux has become more than just a library, it’s an entire ecosystem. One of the reasons behind its popularity is its ability to accommodate different writing styles and many different flavors. If I’m looking for asynchronous actions should I use thunks? or maybe promises? or sagas?","markups":[{"type":3,"start":0,"end":5,"href":"https://github.com/reactjs/redux","title":"","rel":"","anchorType":0},{"type":3,"start":58,"end":67,"href":"https://github.com/xgrommx/awesome-redux","title":"","rel":"","anchorType":0},{"type":3,"start":246,"end":252,"href":"https://github.com/gaearon/redux-thunk","title":"","rel":"","anchorType":0},{"type":3,"start":263,"end":271,"href":"https://github.com/acdlite/redux-promise","title":"","rel":"","anchorType":0},{"type":3,"start":276,"end":281,"href":"https://github.com/yelouafi/redux-saga","title":"","rel":"","anchorType":0}]},{"name":"a7b9","type":1,"text":"There isn’t one right answer to which flavor is “best”. And there isn’t one right way to use Redux. Having said that, too much choice is overwhelming. I want to present an opinionated flavor that I personally like. It’s robust, can deal with complicated real life scenarios — and most of all — it’s simple.","markups":[{"type":3,"start":137,"end":149,"href":"http://www.ted.com/talks/barry_schwartz_on_the_paradox_of_choice?language=en","title":"","rel":"","anchorType":0},{"type":2,"start":172,"end":184},{"type":2,"start":299,"end":305}]},{"name":"fbf6","type":13,"text":"So let’s build an app!","markups":[]},{"name":"2689","type":1,"text":"We need a real life example to walk through. As long as we’re being opinionated, the most interesting place on the Internet is Reddit. Let’s make an app that shows the most interesting posts there.","markups":[{"type":3,"start":127,"end":133,"href":"https://www.reddit.com/","title":"","rel":"","anchorType":0}]},{"name":"04e1","type":1,"text":"On the first screen, we’ll ask the user for 3 topics they’re interested in. We’ll pull the list of topics from Reddit’s list of default front page subreddits.","markups":[{"type":3,"start":147,"end":157,"href":"https://www.reddit.com/subreddits/default","title":"","rel":"","anchorType":0}]},{"name":"dba7","type":1,"text":"After the user makes a choice, we’ll show the list of posts from each of these 3 topics in a filterable list — all topics or just one of the 3. When the user clicks on a post in the list, we’ll show its contents.","markups":[]},{"name":"8ae6","type":13,"text":"Setup","markups":[]},{"name":"3cf2","type":1,"text":"Since we use React for the web (we might add React Native in a future post), our starting point will be Create React App, the official starter kit. We’ll also npm install redux, react-redux and redux-thunk. The result should be something like this.","markups":[{"type":3,"start":104,"end":120,"href":"https://github.com/facebookincubator/create-react-app","title":"","rel":"","anchorType":0},{"type":3,"start":171,"end":176,"href":"https://www.npmjs.com/package/redux","title":"","rel":"","anchorType":0},{"type":3,"start":178,"end":189,"href":"https://www.npmjs.com/package/react-redux","title":"","rel":"","anchorType":0},{"type":3,"start":194,"end":205,"href":"https://www.npmjs.com/package/redux-thunk","title":"","rel":"","anchorType":0},{"type":3,"start":243,"end":247,"href":"https://github.com/wix/react-dataflow-example/tree/998decf6277717ffcee61dea30005c1fe917ae2a","title":"","rel":"","anchorType":0}]},{"name":"5a9e","type":1,"text":"To get the boilerplate out of the way, let’s also quickly initialize the Redux store and hook up thunk middleware in index.js:","markups":[{"type":2,"start":117,"end":125}]},{"name":"9f5e","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"a54830bc88e789f6a1d171a68c54cecc","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"3d85","type":13,"text":"The Flux circle of life in a Redux app","markups":[]},{"name":"1779","type":1,"text":"One of the main things often missing from Redux tutorials is the grand picture and where Redux fits in. Redux is an implementation of the Flux architecture — a pattern for passing data around in a React app.","markups":[{"type":3,"start":138,"end":142,"href":"https://facebook.github.io/flux/","title":"","rel":"","anchorType":0}]},{"name":"5adc","type":1,"text":"Under classic Flux, app state is held within stores. Dispatched actions cause this state to change, afterwhich the views that listen to these state changes will re-render themselves accordingly:","markups":[{"type":2,"start":45,"end":51},{"type":2,"start":64,"end":71},{"type":2,"start":115,"end":120}]},{"name":"ec20","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"1*stmn8kxXJrX9hbk39hHQJA.png","originalWidth":1608,"originalHeight":1083}},{"name":"23c1","type":1,"text":"Flux simplifies life by making data flow in a single direction. This reduces the spaghetti effect as the codebase grows and becomes more complex.","markups":[{"type":3,"start":81,"end":97,"href":"http://whatis.techtarget.com/definition/spaghetti-code","title":"","rel":"","anchorType":0},{"type":2,"start":46,"end":52}]},{"name":"34af","type":1,"text":"One of the difficulties with understanding Redux is the plethora of unintuitive terms like reducers, selectors and thunks. It’s easier to see where they all fit in by placing them on the Flux diagram. These are simply the technical names of the various Redux constructs that implement the different parts of the cycle:","markups":[{"type":2,"start":91,"end":99},{"type":2,"start":101,"end":111},{"type":2,"start":115,"end":121}]},{"name":"cd2d","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"1*9kbmrgH8voxp_rx25LPqIw.png","originalWidth":1608,"originalHeight":1308}},{"name":"e22e","type":1,"text":"As you’ve probably noticed, other terms from the Redux ecosystem like middlewares and sagas, are absent. This is intentional as they won’t play a significant role in our workflow.","markups":[{"type":2,"start":70,"end":81},{"type":2,"start":86,"end":91}]},{"name":"69e5","type":13,"text":"Project directory structure","markups":[]},{"name":"5eac","type":1,"text":"We will organize our code according to the following top-level directory structure under /src:","markups":[{"type":10,"start":89,"end":93}]},{"name":"7a5b","type":9,"text":"/src/components\n“Dumb” React components that have no knowledge of Redux","markups":[{"type":10,"start":0,"end":16}]},{"name":"792d","type":9,"text":"/src/containers\n“Smart” React components that are connected to our Redux store","markups":[{"type":10,"start":0,"end":15},{"type":2,"start":50,"end":59}]},{"name":"f57d","type":9,"text":"/src/services\nAbstraction facades for external API (like backend servers)","markups":[{"type":10,"start":0,"end":13}]},{"name":"cbc0","type":9,"text":"/src/store\nAll Redux-specific code goes here, including all business-logic of our app","markups":[{"type":10,"start":0,"end":10},{"type":2,"start":60,"end":74}]},{"name":"ac6c","type":1,"text":"The store directory is organized by domain, each containing:","markups":[{"type":10,"start":4,"end":9},{"type":2,"start":36,"end":42}]},{"name":"4d05","type":9,"text":"/src/store/{domain}/reducer.js\nReducer as a default export with all selectors as named exports","markups":[{"type":10,"start":0,"end":30}]},{"name":"f065","type":9,"text":"/src/store/{domain}/actions.js\nAll the domain action handlers (thunks and plain object creators)","markups":[{"type":10,"start":0,"end":30}]},{"name":"dcfd","type":13,"text":"A state-first approach","markups":[]},{"name":"0c91","type":1,"text":"Our app has two screens, we’re going to start with the first and let the user choose exactly 3 topics. We can begin implementing any point of the Flux cycle, but I’ve discovered it’s usually easiest for me to start with the State.","markups":[{"type":2,"start":224,"end":229}]},{"name":"b864","type":1,"text":"So what app state does our topics screen need?","markups":[{"type":2,"start":8,"end":17},{"type":2,"start":27,"end":33}]},{"name":"3912","type":1,"text":"We’ll need to hold the list of topics retrieved from the server. We’ll also need to hold the ID’s of the topics chosen by the user so far (max 3). It will be nice to hold them in the order selected, so in case we already have 3 and another is chosen, we can simply drop the oldest one.","markups":[]},{"name":"a5bc","type":1,"text":"How will we structure this app state? There’s a list of actionable tips in my previous post — “Avoiding Accidental Complexity When Structuring Your App State”. Following the tips, this would be an appropriate structure:","markups":[{"type":3,"start":95,"end":157,"href":"https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4","title":"","rel":"","anchorType":0}]},{"name":"167c","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"bcdc0eae20a760408eaf3d1a51d86ee3","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"cd3e","type":1,"text":"The topic URL will serve as a unique ID.","markups":[]},{"name":"fdb4","type":1,"text":"Where will we hold this state? In Redux, the reducer is the construct that holds state and updates it. We will organize our code by domains, so the natural place for this reducer will be: /src/store/topics/reducer.js","markups":[{"type":10,"start":188,"end":216},{"type":2,"start":45,"end":52},{"type":2,"start":132,"end":139}]},{"name":"77ea","type":1,"text":"There’s some boilerplate to create a reducer, you can see it here. Notice that in order to enforce immutability of our state (as required by Redux), I’ve chosen to use an immutability library called seamless-immutable.","markups":[{"type":3,"start":61,"end":65,"href":"https://github.com/wix/react-dataflow-example/blob/0ff3077d3de9a4b2c0f1174a3fa204fee05ed594/src/store/topics/reducer.js","title":"","rel":"","anchorType":0},{"type":3,"start":199,"end":217,"href":"https://github.com/rtfeldman/seamless-immutable","title":"","rel":"","anchorType":0},{"type":2,"start":99,"end":111}]},{"name":"959a","type":13,"text":"Our first scenario","markups":[]},{"name":"7e81","type":1,"text":"After modeling state, I like to take a user scenario and implement it from start to finish. In our case let’s create our topics screen and display some topics as soon as it shows up. This component will be connected to our reducer, meaning it’s a “smart” component that’s aware of Redux. We’ll place it in /src/containers/TopicsScreen.js","markups":[{"type":10,"start":306,"end":337},{"type":2,"start":121,"end":127}]},{"name":"e9cb","type":1,"text":"There’s some boilerplate to create a connected component, you can see it here. Let’s also display it as the content of our App component. Now, when everything is set up, we can fetch some topics.","markups":[{"type":3,"start":73,"end":77,"href":"https://github.com/wix/react-dataflow-example/blob/4151b3e702a002916f1d1579a2e33e0cf1cb0ba3/src/containers/TopicsScreen.js","title":"","rel":"","anchorType":0},{"type":3,"start":123,"end":136,"href":"https://github.com/wix/react-dataflow-example/blob/57d53f2901e46ab2d90f756fd8c5988a5521e8e8/src/App.js","title":"","rel":"","anchorType":0}]},{"name":"1f30","type":6,"text":"Rule: Smart components are not allowed to have any logic except dispatching actions.","markups":[{"type":1,"start":0,"end":5},{"type":1,"start":6,"end":84},{"type":2,"start":0,"end":84}]},{"name":"7973","type":1,"text":"The scenario starts on the view’s componentDidMount. Since can’t run logic directly on the view, we will dispatch an action that will fetch the topics. This action is asynchronous of course, so it will be a thunk:","markups":[{"type":10,"start":34,"end":51},{"type":3,"start":207,"end":212,"href":"https://github.com/gaearon/redux-thunk","title":"","rel":"","anchorType":0}]},{"name":"f5d0","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"a9bad7d50551d176773b33f9f7baa9cf","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"466e","type":1,"text":"In order to abstract the Reddit server API, we’ll create a new service that does the actual network fetch. Its methods will be asynchronous so we can await for the response. In general, I love the async await API so much that my code hasn’t seen a direct use of promises in a long time.","markups":[{"type":10,"start":150,"end":155},{"type":10,"start":262,"end":270},{"type":3,"start":197,"end":212,"href":"https://jakearchibald.com/2014/es7-async-functions/","title":"","rel":"","anchorType":0},{"type":2,"start":63,"end":70}]},{"name":"08b0","type":1,"text":"The service returns an array, but our state structure stores the topics in a map. The action body is a good place to do the conversion. In order to actually store the data in the state, we must invoke our reducer by dispatching a standard plain object action — TOPICS_FETCHED.","markups":[{"type":10,"start":23,"end":28},{"type":10,"start":77,"end":80},{"type":10,"start":261,"end":275},{"type":2,"start":4,"end":11}]},{"name":"2cc9","type":1,"text":"The full source for this stage is available here.","markups":[{"type":3,"start":44,"end":48,"href":"https://github.com/wix/react-dataflow-example/tree/a74d3607578c6ef65da738ab2f92b80789258b2b/src","title":"","rel":"","anchorType":0}]},{"name":"0ca0","type":13,"text":"A few words about services","markups":[]},{"name":"6e58","type":1,"text":"Services are used to abstract external API — in many cases server API like the one provided by Reddit. The benefit of this abstraction layer is that API’s change and we want to decouple our code as much as possible from them. If in the future Reddit decides to rename endpoints or change field names, we can hopefully contain the impact on our app to the service alone.","markups":[{"type":3,"start":83,"end":91,"href":"https://www.reddit.com/dev/api/","title":"","rel":"","anchorType":0}]},{"name":"6b3a","type":6,"text":"Rule: Services must be completely stateless.","markups":[{"type":1,"start":0,"end":44},{"type":2,"start":0,"end":44}]},{"name":"625f","type":1,"text":"This is a tricky rule in our methodology. Imagine what would happen if our Reddit API required login. We might be tempted to hold this login state in the service by instantiating it with the login details.","markups":[{"type":2,"start":154,"end":161}]},{"name":"a22b","type":1,"text":"This isn’t allowed in our methodology because all app state must be contained in the store. Holding state in a service would be a state leak. The acceptable approach in this case would be to provide every service function with login information as argument and hold the login state in one of our reducers.","markups":[{"type":2,"start":85,"end":90},{"type":2,"start":111,"end":118},{"type":2,"start":296,"end":304}]},{"name":"6640","type":1,"text":"Implementing the service is fairly straightforward, you can see it here.","markups":[{"type":3,"start":67,"end":71,"href":"https://github.com/wix/react-dataflow-example/blob/f0e4a6bc4ccdec0b757e3cca7a76b6812f66f49b/src/services/reddit.js","title":"","rel":"","anchorType":0}]},{"name":"d8dd","type":13,"text":"Completing the scenario — reducer and view","markups":[]},{"name":"011b","type":1,"text":"The plain object action TOPICS_FETCHED arrives at our reducer and contains the freshly fetched topicsByUrl as parameter. Our reducer doesn’t need to do much except save this data on the state:","markups":[{"type":10,"start":24,"end":38},{"type":10,"start":95,"end":106}]},{"name":"048a","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"f6807a1bf035914b1ca7826f04e510bb","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"04e6","type":1,"text":"Notice the usage of seamless-immutable to make this immutable change explicit and straightforward. Immutability libraries are of course optional, I prefer their syntactic sugar to object spread tricks.","markups":[{"type":3,"start":20,"end":38,"href":"https://github.com/rtfeldman/seamless-immutable#merge","title":"","rel":"","anchorType":0},{"type":3,"start":180,"end":200,"href":"http://redux.js.org/docs/recipes/UsingObjectSpreadOperator.html","title":"","rel":"","anchorType":0}]},{"name":"c0a2","type":1,"text":"After the state updates, our view needs to re-render. This means the view needs to listen on the part of the state it cares about. This is done with mapStateToProps:","markups":[{"type":3,"start":149,"end":164,"href":"https://github.com/reactjs/react-redux","title":"","rel":"","anchorType":0}]},{"name":"7573","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"ad1f8a720aaece84484d100ff9beffbd","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"8030","type":1,"text":"I decided that our view will render the list of topics using a separate ListView component that takes a rowsById map and a rowsIdArray (inspired by React Native). I’m using mapStateToProps to prepare these two props in TopicsScreen (they will later be passed on directly to the ListView). The two props can be derived from our state. Notice something interesting, I don’t access the state directly..","markups":[{"type":10,"start":72,"end":80},{"type":10,"start":104,"end":112},{"type":10,"start":123,"end":134},{"type":10,"start":173,"end":188},{"type":10,"start":219,"end":231},{"type":10,"start":278,"end":286},{"type":3,"start":148,"end":160,"href":"https://facebook.github.io/react-native/docs/listview.html","title":"","rel":"","anchorType":0}]},{"name":"0873","type":6,"text":"Rule: Smart components should always access state through selectors.","markups":[{"type":1,"start":0,"end":68},{"type":2,"start":0,"end":68}]},{"name":"0e0e","type":1,"text":"Selectors are one of the most important constructs in Redux that people tend to overlook. A selector is a pure function that takes the global state as argument and returns some transformation over it. Selectors are tightly coupled to reducers and are located inside reducer.js. They allow us to perform a few calculations on data before it’s being consumed by the view. In our methodology, we take this idea even further. Every time anyone needs to access part of the state (like in mapStatetoProps), they need to go through a selector.","markups":[{"type":10,"start":266,"end":276},{"type":10,"start":483,"end":498},{"type":2,"start":0,"end":9},{"type":2,"start":234,"end":242}]},{"name":"59cf","type":1,"text":"Why? The idea is to encapsulate the internal structure of the app state and hide it from views. Imagine that we decide later on to change the internal state structure. We wouldn’t want to go over all the views in our app and refactor them. Passing through a selector will allow us to confine the refactoring to the reducer only.","markups":[{"type":2,"start":315,"end":322}]},{"name":"dddc","type":1,"text":"This is what does our topics/reducer.js look like:","markups":[{"type":10,"start":22,"end":39}]},{"name":"f71a","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"9a854de24ab296c1058ee3b4911c30cd","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"ee1a","type":1,"text":"The entire current state of our app, including ListView, can be seen here.","markups":[{"type":10,"start":47,"end":55},{"type":3,"start":69,"end":73,"href":"https://github.com/wix/react-dataflow-example/tree/6b115770ac82d6f78a9f209630d0e0165f359316/src","title":"","rel":"","anchorType":0}]},{"name":"ab05","type":13,"text":"A few words about “dumb” components","markups":[]},{"name":"8990","type":1,"text":"ListView is a good example of a “dumb” component. It is not connected to the store nor aware of Redux at all. Unlike the “smart” connected components that are located in /src/containers, these components are located in /src/components","markups":[{"type":10,"start":0,"end":8},{"type":10,"start":170,"end":185},{"type":10,"start":219,"end":234}]},{"name":"72b1","type":1,"text":"“Dumb” components receive data from their parents through props and may hold local component state. Assume you’re implementing a TextInput component from scratch. The blinking caret position is an excellent example for local component state that should not find its way into your global app state.","markups":[{"type":10,"start":129,"end":138}]},{"name":"5413","type":1,"text":"So when do we need to move from a “smart” component to a “dumb” one?","markups":[]},{"name":"85fb","type":6,"text":"Rule: Minimize view logic in smart components by extracting it into dumb components.","markups":[{"type":1,"start":0,"end":84},{"type":2,"start":0,"end":84}]},{"name":"2b1b","type":1,"text":"If you look at the implementation of ListView, you will see it contains view logic like iterating over rows. We want to avoid having this logic in our smart TopicsScreen component. This keeps our smart components as wirings only. Another benefit is that the ListView logic is now reusable.","markups":[{"type":10,"start":258,"end":266},{"type":3,"start":37,"end":45,"href":"https://github.com/wix/react-dataflow-example/blob/6b115770ac82d6f78a9f209630d0e0165f359316/src/components/ListView.js","title":"","rel":"","anchorType":0},{"type":3,"start":157,"end":169,"href":"https://github.com/wix/react-dataflow-example/blob/6b115770ac82d6f78a9f209630d0e0165f359316/src/containers/TopicsScreen.js","title":"","rel":"","anchorType":0}]},{"name":"3d59","type":13,"text":"Next scenario — multiple topic selection","markups":[]},{"name":"6dc9","type":1,"text":"We’ve completed our first scenario. Let’s move on to the next one — having the user select exactly 3 topics from the list.","markups":[]},{"name":"8da6","type":1,"text":"Our scenario starts with the user clicking on one of the topics. This event is handled by TopicsScreen but since this smart component cannot contain any business logic, we’ll dispatch a new action — selectTopic. This action will also be a thunk, placed in topics/actions.js. As you can see, almost every action we export (to be dispatched by views) is a thunk. We usually only dispatch plain object actions from within a thunk in order to update the reducer state.","markups":[{"type":10,"start":90,"end":102},{"type":10,"start":199,"end":210},{"type":10,"start":256,"end":273},{"type":2,"start":239,"end":244},{"type":2,"start":354,"end":359}]},{"name":"2cf3","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"9f83b526299916d71dc3392f35c47319","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"e425","type":1,"text":"An interesting aspect about this thunk is that it needs to access the state. Notice how we keep the rule that every state access goes through a selector even here (although some may claim it’s going a bit too far).","markups":[]},{"name":"813c","type":1,"text":"We’ll have to update the reducer to handle the TOPICS_SELECTED action and store the new selected topics. There’s an interesting question whether selectTopic needs to be a thunk at all. Alternatively, we could make selectTopic a plain object action and move this business logic to the reducer itself. This is a valid strategy. Personally I prefer to keep the business logic in thunks.","markups":[{"type":10,"start":47,"end":62},{"type":10,"start":145,"end":156},{"type":10,"start":214,"end":225},{"type":2,"start":171,"end":176}]},{"name":"13d9","type":1,"text":"Once the state updates, we need to propagate the topic selection back to our view. This means adding the selected topics in mapStateToProps. Since the view needs to query whether every rowId is selected or not, it is more convenient to pass this data to the view as a map. Since the data has to go through a selector anyways, this will be a great place to do the transformation.","markups":[{"type":10,"start":124,"end":139},{"type":10,"start":185,"end":190},{"type":2,"start":308,"end":316}]},{"name":"c1f6","type":1,"text":"After implementing the above, and refactoring the background color change due to row selection into a new dumb component — ListRow — our app looks like this.","markups":[{"type":10,"start":123,"end":130},{"type":3,"start":152,"end":156,"href":"https://github.com/wix/react-dataflow-example/tree/a279a45055370ef769e5f799cf44a2b034131ab3/src","title":"","rel":"","anchorType":0}]},{"name":"ab9e","type":13,"text":"A few words about business logic","markups":[]},{"name":"3dea","type":1,"text":"One of the goals of a good methodology is achieving proper separation between views and business logic. Where was our business logic implemented so far?","markups":[]},{"name":"6593","type":1,"text":"All business logic was implemented under Redux in the /src/store directory. Most of it was inside thunks in actions.js and some it was inside selectors in reducer.js. This is actually an official rule:","markups":[{"type":10,"start":54,"end":64},{"type":10,"start":108,"end":118},{"type":10,"start":155,"end":165},{"type":2,"start":98,"end":104},{"type":2,"start":142,"end":151}]},{"name":"bf3c","type":6,"text":"Rule: Place all business logic inside action handlers (thunks), selectors and reducers.","markups":[{"type":1,"start":0,"end":87},{"type":2,"start":0,"end":87}]},{"name":"b643","type":13,"text":"Navigating to the next screen — the posts list","markups":[]},{"name":"7a94","type":1,"text":"When we have more than one screen we need a way to navigate. This is usually achieved using a navigation component like react-router. I want to deliberately avoid using a router in order to keep our example simple. Opinionated external dependencies like routers tend to draw attention away from the conceptual discussion of methodology.","markups":[{"type":3,"start":120,"end":132,"href":"https://github.com/ReactTraining/react-router","title":"","rel":"","anchorType":0}]},{"name":"e917","type":1,"text":"Instead, let’s add a state variable , selectionFinalized, telling us whether the user completed topic selection or not. Once the user selects 3 topics, we will display a button that once clicked — will finalize selection and move to the next screen. Clicking the button will dispatch an action that sets this state variable directly.","markups":[{"type":10,"start":38,"end":56}]},{"name":"e0fa","type":1,"text":"This is all fairly similar to what we’ve been doing so far, the only interesting part is knowing when to display the button (as soon as at least 3 topics are chosen). We may be tempted to add another state variable for this purpose, but this variable can actually be derived from data we already have in the state now. This means we should implement this business logic as a selector:","markups":[{"type":2,"start":375,"end":383}]},{"name":"18ad","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"cbe578828ebc930e0a69be82ee6e268c","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"ec43","type":1,"text":"The full implementation of the above is available here. In order to do the actual screen switch, we’ll need to change App into a connected component and have it listen on selectionFinalized in its mapStateToProps. The full implementation is available here.","markups":[{"type":10,"start":118,"end":121},{"type":10,"start":171,"end":189},{"type":10,"start":197,"end":212},{"type":3,"start":50,"end":54,"href":"https://github.com/wix/react-dataflow-example/blob/2884e36fb3549b7aeb405145bef9e5f75eefaa1b/src/containers/TopicsScreen.js","title":"","rel":"","anchorType":0},{"type":3,"start":251,"end":255,"href":"https://github.com/wix/react-dataflow-example/blob/5c9504d7138dfa08f98a77fc56c906288e4047e3/src/App.js","title":"","rel":"","anchorType":0}]},{"name":"7cf5","type":13,"text":"The posts screen — once again state first","markups":[]},{"name":"5f89","type":1,"text":"Since we’re now well experienced in the methodology, we can run through implementing the second screen a bit faster. This new screen deals with a new domain — posts. In order to make our app modular as possible, we’ll give this domain a separate reducer and separate app state.","markups":[{"type":2,"start":159,"end":164},{"type":2,"start":246,"end":253}]},{"name":"0372","type":1,"text":"Reminder — the screen’s purpose is to display a list of posts that can be filtered according to topic. The user can click on a post in the list and see its content. Following our structuring tips, this would work:","markups":[{"type":3,"start":191,"end":195,"href":"https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4","title":"","rel":"","anchorType":0}]},{"name":"cb97","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"691ad95710ad48c7fe7bfd3584f4a874","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"1639","type":1,"text":"And our new posts reducer is born.","markups":[{"type":3,"start":29,"end":33,"href":"https://github.com/wix/react-dataflow-example/blob/29f7a950a3c51143c4df85d92952a771014fb4ba/src/store/posts/reducer.js","title":"","rel":"","anchorType":0},{"type":2,"start":12,"end":17}]},{"name":"1f0e","type":13,"text":"First scenario — showing the posts list without filter","markups":[]},{"name":"d914","type":1,"text":"As usual, when our state is modeled, we move to a simple user scenario and implement it from start to finish. Let’s start with showing the full post list without any filter applied.","markups":[]},{"name":"8a59","type":1,"text":"We need a new smart container to show the posts, we’ll call it PostsScreen and have it dispatch a new action called fetchPosts when it mounts. The action will be a thunk under our new domain in posts/actions.js","markups":[{"type":10,"start":63,"end":74},{"type":10,"start":116,"end":126},{"type":10,"start":194,"end":210},{"type":2,"start":164,"end":169}]},{"name":"3f06","type":1,"text":"This is very similar to what we did before, the implementation is here.","markups":[{"type":3,"start":66,"end":70,"href":"https://github.com/wix/react-dataflow-example/blob/1298dc958b5c4c1b01b8f3f187f127d0dc291694/src/store/posts/actions.js","title":"","rel":"","anchorType":0}]},{"name":"56b5","type":1,"text":"At the end of the thunk we dispatch the plain action POSTS_FETCHED that carries the posts to the reducer. We’ll have to modify our reducer to store the data. In order to show the list in PostsScreen, we need to hook up its mapStateToProps to a selector providing this part of the state. We can then display the list by reusing our ListView component.","markups":[{"type":10,"start":53,"end":66},{"type":10,"start":187,"end":198},{"type":10,"start":223,"end":238},{"type":10,"start":331,"end":339}]},{"name":"13c7","type":1,"text":"Nothing new as well, the implementation is here.","markups":[{"type":3,"start":43,"end":47,"href":"https://github.com/wix/react-dataflow-example/blob/5a521145eb3a49be1bf2d0c1c529db31f7841c3d/src/containers/PostsScreen.js","title":"","rel":"","anchorType":0}]},{"name":"1ef9","type":13,"text":"Next scenario — filter the post list","markups":[]},{"name":"682d","type":1,"text":"This scenario starts with showing the user the available filters. We can pull this data from the topics reducer state using an existing selector. When a filter is changed, we will dispatch an action that will change it directly in the posts reducer.","markups":[{"type":2,"start":97,"end":104},{"type":2,"start":235,"end":240}]},{"name":"8542","type":1,"text":"The interesting part is applying the filter to the post list. In our app state we currently hold all postsById and the currentFilter. We don’t want to hold the filtered result in the app state as well because it can be derived from them. Business logic for deriving data runs in selectors right before arriving at the view in mapStateToProps. Our selector therefore will be:","markups":[{"type":10,"start":101,"end":110},{"type":10,"start":119,"end":132},{"type":10,"start":326,"end":341},{"type":2,"start":279,"end":289}]},{"name":"f008","type":11,"text":"","markups":[],"layout":1,"iframe":{"mediaResourceId":"2791adacfb3a9974be1b3d90deac30aa","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars0.githubusercontent.com%2Fu%2F6762255%3Fv%3D3%26s%3D400&key=4fce0568f2ce49e8b54624ef71a8a5bd"}},{"name":"9fb4","type":1,"text":"The full implementation for this stage is available here.","markups":[{"type":3,"start":52,"end":56,"href":"https://github.com/wix/react-dataflow-example/tree/938c0d6ef8cff2bdd66cdd8a5ad3693fd7ffaffa/src","title":"","rel":"","anchorType":0}]},{"name":"5f72","type":13,"text":"Last scenario — showing post details","markups":[]},{"name":"45ce","type":1,"text":"This scenario is actually the simplest one yet. We have an app state variable holding the currentPostId. All we have to do is update it when the user clicks on a post in the list by dispatching an action. PostsScreen needs this state variable in order to show the post details, which means we’ll need a selector to drive it in mapStateToProps.","markups":[{"type":10,"start":90,"end":103},{"type":10,"start":205,"end":216},{"type":10,"start":327,"end":342},{"type":2,"start":303,"end":311}]},{"name":"4ad0","type":1,"text":"Take a look at the detailed implementation here.","markups":[{"type":3,"start":43,"end":47,"href":"https://github.com/wix/react-dataflow-example/blob/ae35eaa20b798b34225240a13a52c3e2586a4208/src/containers/PostsScreen.js","title":"","rel":"","anchorType":0}]},{"name":"a2e5","type":13,"text":"And we’re done!","markups":[]},{"name":"74d0","type":1,"text":"This also wraps up the implementation of our entire example app. The full source code of the app is available on GitHub:\nhttps://github.com/wix/react-dataflow-example","markups":[{"type":3,"start":121,"end":166,"href":"https://github.com/wix/react-dataflow-example","title":"","rel":"nofollow","anchorType":0}]},{"name":"5660","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"1*gVe7mIUjHcslYBUMBPGsRQ.png","originalWidth":128,"originalHeight":128}},{"name":"5031","type":13,"text":"Summary of our opinionated workflow rules","markups":[]},{"name":"d149","type":9,"text":"App state is a first class citizen, structure it like an in-memory database.","markups":[{"type":3,"start":36,"end":45,"href":"https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4","title":"","rel":"","anchorType":0},{"type":2,"start":0,"end":76}]},{"name":"0132","type":9,"text":"Smart components are not allowed to have any logic except dispatching actions.","markups":[{"type":2,"start":0,"end":78}]},{"name":"7e77","type":9,"text":"Smart components should always access state through selectors.","markups":[{"type":2,"start":0,"end":62}]},{"name":"3568","type":9,"text":"Minimize view logic in smart components by extracting it into dumb components.","markups":[{"type":2,"start":0,"end":78}]},{"name":"9276","type":9,"text":"Place all business logic inside action handlers (thunks), selectors and reducers.","markups":[{"type":2,"start":0,"end":81}]},{"name":"fb39","type":9,"text":"Services must be completely stateless.","markups":[{"type":2,"start":0,"end":38}]},{"name":"c178","type":1,"text":"Remember, Redux offers a lot of room for personal style. There are many alternate workflows with different sets of rules. Some good friends of mine come to mind who prefer redux-promise-middleware instead of thunks and like to place all of the business logic inside reducers only.","markups":[{"type":3,"start":172,"end":196,"href":"https://github.com/pburtchaell/redux-promise-middleware","title":"","rel":"nofollow","anchorType":0},{"type":2,"start":208,"end":214},{"type":2,"start":266,"end":275}]},{"name":"035f","type":1,"text":"If you want to share a different methodology that works for you, feel free to PR your own implementation for the above project and we’ll provide it as a branch for comparison.","markups":[]}],"sections":[{"name":"8f94","startIndex":0},{"name":"c3c2","startIndex":3},{"name":"f01f","startIndex":19},{"name":"9e2d","startIndex":111},{"name":"7f2c","startIndex":121}]},"postDisplay":{"coverless":true}},"virtuals":{"statusForCollection":"APPROVED","createdAtRelative":"5 days ago","updatedAtRelative":"a day ago","acceptedAtRelative":"","createdAtEnglish":"October 13, 2016","updatedAtEnglish":"October 16, 2016","acceptedAtEnglish":"","firstPublishedAtEnglish":"October 16, 2016","latestPublishedAtEnglish":"October 16, 2016","allowNotes":true,"snippet":"Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often…","previewImage":{"imageId":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","filter":"","backgroundSize":"","originalWidth":4096,"originalHeight":1454,"strategy":"resample","height":0,"width":0},"wordCount":3108,"imageCount":4,"readingTime":12.428301886792452,"subtitle":"Redux has become one of the most popular Flux implementations for managing data flow in React apps. Reading about Redux, though, often…","publishedInCount":1,"usersBySocialRecommends":[],"latestPublishedAtAbbreviated":"Oct 16","firstPublishedAtAbbreviated":"Oct 16","emailSnippet":"causes a sensory overload where you can’t see the forest for the trees. Presented below is a straightforward and opinionated workflow for implementing real life apps with Redux. It is shown by example with a step by step implementation walkthrough of an actual app. It attempts to apply the principles behind Redux in a practical way and detail the thought process behind every decision.\n\nAn opinionated approach for idiomatic Redux\n\nRedux has become more than just a library, it’s an entire…","recommends":140,"socialRecommends":[],"isBookmarked":false,"tags":[{"slug":"react","name":"React","postCount":3567,"virtuals":{"isFollowing":false},"metadata":{"followerCount":6915,"postCount":3567,"coverImage":{"id":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","originalWidth":4096,"originalHeight":1454}},"type":"Tag"},{"slug":"redux","name":"Redux","postCount":593,"virtuals":{"isFollowing":false},"metadata":{"followerCount":1906,"postCount":593,"coverImage":{"id":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","originalWidth":4096,"originalHeight":1454}},"type":"Tag"},{"slug":"javascript","name":"JavaScript","postCount":17231,"virtuals":{"isFollowing":false},"metadata":{"followerCount":19344,"postCount":17231,"coverImage":{"id":"1*raWO3dhM4jMjf9VY-kZzNg.png","originalWidth":1400,"originalHeight":1120}},"type":"Tag"},{"slug":"react-native","name":"React Native","postCount":701,"virtuals":{"isFollowing":false},"metadata":{"followerCount":1749,"postCount":701,"coverImage":{"id":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","originalWidth":4096,"originalHeight":1454}},"type":"Tag"},{"slug":"reactjs","name":"Reactjs","postCount":467,"virtuals":{"isFollowing":false},"metadata":{"followerCount":2302,"postCount":467,"coverImage":{"id":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","originalWidth":4096,"originalHeight":1454}},"type":"Tag"}],"socialRecommendsCount":0,"responsesCreatedCount":1,"links":{"entries":[{"url":"http://www.ted.com/talks/barry_schwartz_on_the_paradox_of_choice?language=en","alts":[{"type":2,"url":"ted://talks/93?source=facebook"},{"type":3,"url":"ted://talks/barry_schwartz_on_the_paradox_of_choice?source=facebook"}]},{"url":"https://hackernoon.com/avoiding-accidental-complexity-when-structuring-your-app-state-6e6d22ad5e2a#.cn46edbo4","alts":[{"type":2,"url":"medium://p/6e6d22ad5e2a"},{"type":3,"url":"medium://p/6e6d22ad5e2a"}]}],"version":"0.3","generatedAt":1476679989702},"isLockedPreviewOnly":false},"coverless":true,"slug":"redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":true,"allowResponses":true,"importedUrl":"","importedPublishedAt":0,"visibility":0,"uniqueSlug":"redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092","previewContent":{"bodyModel":{"paragraphs":[{"name":"previewImage","type":4,"text":"","layout":10,"metadata":{"id":"1*7lHJdZ2Tupj7kb6AgHPt-Q.jpeg","originalWidth":4096,"originalHeight":1454}},{"name":"previewTitle","type":3,"text":"Redux Step by Step: A Simple and Robust Workflow for Real Life Apps","alignment":1},{"name":"previewSubtitle","type":13,"text":"Redux has become one of the most…","alignment":1}],"sections":[{"startIndex":0}]},"isFullContent":false},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092","approvedHomeCollectionId":"3a8144eabfe3","approvedHomeCollection":{"id":"3a8144eabfe3","name":"Hacker Noon","slug":"hacker-daily","tags":["HACKATHONS","HACKING","PROGRAMMING","TECH","HACKER"],"creatorId":"3ba40c3346c4","description":"how hackers start their afternoons.","shortDescription":"how hackers start their afternoons.","image":{"imageId":"1*76XiKOa05Yya6_CdYX8pVg.jpeg","filter":"","backgroundSize":"","originalWidth":8346,"originalHeight":8346,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":33395,"postCount":489,"activeAt":1476726970945},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":""},"logo":{"imageId":"1*iPOPOotvbMB_2ZRLb6nQDw.png","filter":"","backgroundSize":"","originalWidth":3600,"originalHeight":432,"strategy":"resample","height":0,"width":0},"twitterUsername":"hackernoon","facebookPageName":"hackernoon","publicEmail":"team@c.how","collectionMastheadId":"628349c2609a","domain":"hackernoon.com","sections":[{"type":2,"collectionHeaderMetadata":{"title":"","description":"how hackers start their afternoons","backgroundImage":{},"logoImage":{"id":"1*iPOPOotvbMB_2ZRLb6nQDw@2x.png","originalWidth":3600,"originalHeight":432,"alt":"Hacker Noon"},"alignment":2,"layout":5}},{"type":1,"postListMetadata":{"source":1,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":5,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":4,"layout":4,"number":1,"postIds":[],"tagSlug":"Letters"}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":4,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":2,"number":2,"postIds":["a1e810973c5e","4ef3a839aaba"]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":6,"number":1,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["b177ab0a6b70","85fc643ccc2f","80414e0582d4"]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":24,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["95f87f51d79","e44f74a7b596","8694020b96e8"]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":6,"postIds":["88aabb0d2a7","31529b30d367","a293a4d7d4e7","d49e6bc22936","b3901584d61d"]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":6,"postIds":["7cd00926828","5bd563fbb26e","f44e381951b6","7d20a0e38997","521cb2925155","8e70452f3eed"]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":5,"postIds":[]}}],"tintColor":"#FF00FF00","lightText":false,"favicon":{"imageId":"1*76XiKOa05Yya6_CdYX8pVg.jpeg","filter":"","backgroundSize":"","originalWidth":8346,"originalHeight":8346,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF00A600","point":0},{"color":"#FF009A00","point":0.1},{"color":"#FF008E00","point":0.2},{"color":"#FF008100","point":0.3},{"color":"#FF007500","point":0.4},{"color":"#FF006800","point":0.5},{"color":"#FF005A00","point":0.6},{"color":"#FF044D01","point":0.7},{"color":"#FF083F04","point":0.8},{"color":"#FF093005","point":0.9},{"color":"#FF062004","point":1}],"backgroundColor":"#FFFFFFFF"},"tintBackgroundSpectrum":{"colorPoints":[{"color":"#FF00FF00","point":0},{"color":"#FF00F100","point":0.1},{"color":"#FF00E200","point":0.2},{"color":"#FF00D300","point":0.3},{"color":"#FF00C300","point":0.4},{"color":"#FF00B400","point":0.5},{"color":"#FF00A300","point":0.6},{"color":"#FF009200","point":0.7},{"color":"#FF008000","point":0.8},{"color":"#FF006D00","point":0.9},{"color":"#FF005900","point":1}],"backgroundColor":"#FF00FF00"},"highlightSpectrum":{"colorPoints":[{"color":"#FFD3FFC4","point":0},{"color":"#FFCBFFBA","point":0.1},{"color":"#FFC2FFB0","point":0.2},{"color":"#FFB9FFA6","point":0.3},{"color":"#FFB0FF9B","point":0.4},{"color":"#FFA7FF91","point":0.5},{"color":"#FF9DFF86","point":0.6},{"color":"#FF92FF7B","point":0.7},{"color":"#FF87FF70","point":0.8},{"color":"#FF7BFF65","point":0.9},{"color":"#FF6EFF59","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Tech","tagSlug":"tech","url":"https://hackernoon.com/tagged/tech","source":"tagSlug"},{"type":1,"title":"Productivity","tagSlug":"productivity","url":"https://hackernoon.com/tagged/productivity","source":"tagSlug"},{"type":1,"title":"Growth","tagSlug":"growth","url":"https://hackernoon.com/tagged/growth","source":"tagSlug"},{"type":1,"title":"Founder Stories","tagSlug":"founders","url":"https://hackernoon.com/tagged/founders","source":"tagSlug"},{"type":1,"title":"Letters","tagSlug":"letters","url":"https://hackernoon.com/tagged/letters","source":"tagSlug"},{"type":1,"title":"Favorites","tagSlug":"favorites","url":"https://hackernoon.com/tagged/favorites","source":"tagSlug"}],"fullTextRssFeed":1,"colorBehavior":2,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"type":"Collection"},"newsletterId":"","webCanonicalUrl":"https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092","mediumUrl":"https://hackernoon.com/redux-step-by-step-a-simple-and-robust-workflow-for-real-life-apps-1fdf7df46092","migrationId":"","notifyFollowers":true,"notifyTwitter":false,"isSponsored":false,"isRequestToPubDisabled":false,"notifyFacebook":false,"responseHiddenOnParentPostAt":0,"type":"Post"},"collaborators":[],"membershipPlans":[],"collectionUserRelations":[],"mode":null,"references":{"User":{"83a4f96844d0":{"userId":"83a4f96844d0","name":"Tal Kol","username":"talkol","createdAt":1465489677854,"lastPostCreatedAt":1476678953579,"imageId":"1*RvlrG_Pdhzb4RmV6aeHnrg.png","backgroundImageId":"","bio":"Full-stack developer. Co-founded two technology companies, the latter acquired by Wix.com.","twitterScreenName":"koltal","socialStats":{"userId":"83a4f96844d0","usersFollowedCount":14,"usersFollowedByCount":403,"type":"SocialStats"},"social":{"userId":"lo_39515f4547dc","targetUserId":"83a4f96844d0","type":"Social"},"facebookAccountId":"","allowNotes":1,"type":"User"}},"Collection":{"3a8144eabfe3":{"id":"3a8144eabfe3","name":"Hacker Noon","slug":"hacker-daily","tags":["HACKATHONS","HACKING","PROGRAMMING","TECH","HACKER"],"creatorId":"3ba40c3346c4","description":"how hackers start their afternoons.","shortDescription":"how hackers start their afternoons.","image":{"imageId":"1*76XiKOa05Yya6_CdYX8pVg.jpeg","filter":"","backgroundSize":"","originalWidth":8346,"originalHeight":8346,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":33395,"postCount":489,"activeAt":1476726970945},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":""},"logo":{"imageId":"1*iPOPOotvbMB_2ZRLb6nQDw.png","filter":"","backgroundSize":"","originalWidth":3600,"originalHeight":432,"strategy":"resample","height":0,"width":0},"twitterUsername":"hackernoon","facebookPageName":"hackernoon","publicEmail":"team@c.how","collectionMastheadId":"628349c2609a","domain":"hackernoon.com","sections":[{"type":2,"collectionHeaderMetadata":{"title":"","description":"how hackers start their afternoons","backgroundImage":{},"logoImage":{"id":"1*iPOPOotvbMB_2ZRLb6nQDw@2x.png","originalWidth":3600,"originalHeight":432,"alt":"Hacker Noon"},"alignment":2,"layout":5}},{"type":1,"postListMetadata":{"source":1,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":2,"number":2,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":5,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":4,"layout":4,"number":1,"postIds":[],"tagSlug":"Letters"}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":4,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":2,"number":2,"postIds":["a1e810973c5e","4ef3a839aaba"]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":2,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":6,"number":1,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["b177ab0a6b70","85fc643ccc2f","80414e0582d4"]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":6,"postIds":[]}},{"type":1,"postListMetadata":{"source":1,"layout":4,"number":24,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":[]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":3,"postIds":["95f87f51d79","e44f74a7b596","8694020b96e8"]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":6,"postIds":["88aabb0d2a7","31529b30d367","a293a4d7d4e7","d49e6bc22936","b3901584d61d"]}},{"type":1,"postListMetadata":{"source":3,"layout":4,"number":6,"postIds":["7cd00926828","5bd563fbb26e","f44e381951b6","7d20a0e38997","521cb2925155","8e70452f3eed"]}},{"type":1,"postListMetadata":{"source":2,"layout":4,"number":5,"postIds":[]}}],"tintColor":"#FF00FF00","lightText":false,"favicon":{"imageId":"1*76XiKOa05Yya6_CdYX8pVg.jpeg","filter":"","backgroundSize":"","originalWidth":8346,"originalHeight":8346,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF00A600","point":0},{"color":"#FF009A00","point":0.1},{"color":"#FF008E00","point":0.2},{"color":"#FF008100","point":0.3},{"color":"#FF007500","point":0.4},{"color":"#FF006800","point":0.5},{"color":"#FF005A00","point":0.6},{"color":"#FF044D01","point":0.7},{"color":"#FF083F04","point":0.8},{"color":"#FF093005","point":0.9},{"color":"#FF062004","point":1}],"backgroundColor":"#FFFFFFFF"},"tintBackgroundSpectrum":{"colorPoints":[{"color":"#FF00FF00","point":0},{"color":"#FF00F100","point":0.1},{"color":"#FF00E200","point":0.2},{"color":"#FF00D300","point":0.3},{"color":"#FF00C300","point":0.4},{"color":"#FF00B400","point":0.5},{"color":"#FF00A300","point":0.6},{"color":"#FF009200","point":0.7},{"color":"#FF008000","point":0.8},{"color":"#FF006D00","point":0.9},{"color":"#FF005900","point":1}],"backgroundColor":"#FF00FF00"},"highlightSpectrum":{"colorPoints":[{"color":"#FFD3FFC4","point":0},{"color":"#FFCBFFBA","point":0.1},{"color":"#FFC2FFB0","point":0.2},{"color":"#FFB9FFA6","point":0.3},{"color":"#FFB0FF9B","point":0.4},{"color":"#FFA7FF91","point":0.5},{"color":"#FF9DFF86","point":0.6},{"color":"#FF92FF7B","point":0.7},{"color":"#FF87FF70","point":0.8},{"color":"#FF7BFF65","point":0.9},{"color":"#FF6EFF59","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Tech","tagSlug":"tech","url":"https://hackernoon.com/tagged/tech","source":"tagSlug"},{"type":1,"title":"Productivity","tagSlug":"productivity","url":"https://hackernoon.com/tagged/productivity","source":"tagSlug"},{"type":1,"title":"Growth","tagSlug":"growth","url":"https://hackernoon.com/tagged/growth","source":"tagSlug"},{"type":1,"title":"Founder Stories","tagSlug":"founders","url":"https://hackernoon.com/tagged/founders","source":"tagSlug"},{"type":1,"title":"Letters","tagSlug":"letters","url":"https://hackernoon.com/tagged/letters","source":"tagSlug"},{"type":1,"title":"Favorites","tagSlug":"favorites","url":"https://hackernoon.com/tagged/favorites","source":"tagSlug"}],"fullTextRssFeed":1,"colorBehavior":2,"instantArticlesState":0,"acceleratedMobilePagesState":0,"ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"type":"Collection"}},"Social":{"83a4f96844d0":{"userId":"lo_39515f4547dc","targetUserId":"83a4f96844d0","type":"Social"}},"SocialStats":{"83a4f96844d0":{"userId":"83a4f96844d0","usersFollowedCount":14,"usersFollowedByCount":403,"type":"SocialStats"}}}})
// ]]></script></body></html>